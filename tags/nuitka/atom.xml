<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Nuitka on Akkuman 的技术博客</title>
    <link>https://www.hacktech.cn/tags/nuitka/</link>
    <description>Recent content in Nuitka on Akkuman 的技术博客</description>
    <generator>Hugo -- 0.148.1</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 18 Jul 2025 10:51:34 +0800</lastBuildDate>
    <atom:link href="https://www.hacktech.cn/tags/nuitka/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>staticx 试用</title>
      <link>https://www.hacktech.cn/post/2025/07/staticx-trial-e0ngr/</link>
      <pubDate>Wed, 16 Jul 2025 13:56:03 +0800</pubDate>
      <guid>https://www.hacktech.cn/post/2025/07/staticx-trial-e0ngr/</guid>
      <description>本文测试了staticx工具在32位系统上打包Python程序为静态可执行文件的可行性。通过Docker创建32位Debian环境，分别使用nuitka和pyinstaller进行打包测试。结果显示：nuitka的standalone模式产物无法运行，而pyinstaller&#43;onefile模式生成的二进制文件可在64位系统运行，但在CentOS 6 32位系统报错缺少libnssfix.so。后续尝试在CentOS 6 32位直接安装Python 3.11并用pyinstaller打包时，staticx处理过程出现异常。测试表明当前方案存在跨平台兼容性问题，特别是对老旧32位系统的支持不足。</description>
    </item>
    <item>
      <title>centos6使用高版本python</title>
      <link>https://www.hacktech.cn/post/2025/07/centos6-uses-a-higher-version-of-python-6ysrp/</link>
      <pubDate>Fri, 11 Jul 2025 13:21:15 +0800</pubDate>
      <guid>https://www.hacktech.cn/post/2025/07/centos6-uses-a-higher-version-of-python-6ysrp/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://www.hacktech.cn/post/2025/07/centos6-uses-a-higher-version-of-python-6ysrp/&#34;&gt;centos6使用高版本python | Akkuman 的技术博客&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;需要能在 centos 6.3 上跑的 python 3.10 3.12&lt;/p&gt;
&lt;p&gt;并且需要支持 pandas/numpy 科学库，能使用 nuitka 打包&lt;/p&gt;
&lt;p&gt;官方版本肯定是跑不起来的&lt;/p&gt;
&lt;p&gt;根据之前的 ansible-playbook 独立二进制编译实录 中提到的参考来看&lt;/p&gt;</description>
    </item>
    <item>
      <title>ansible-playbook 独立二进制编译实录</title>
      <link>https://www.hacktech.cn/post/2024/11/ansibleplaybook-independent-binary-compilation-actual-record-2f3tyf/</link>
      <pubDate>Thu, 14 Nov 2024 13:45:40 +0800</pubDate>
      <guid>https://www.hacktech.cn/post/2024/11/ansibleplaybook-independent-binary-compilation-actual-record-2f3tyf/</guid>
      <description>本文记录了将Ansible-playbook编译为独立二进制文件的探索过程。因内部部署环境存在Docker版本和系统兼容性问题，希望将ansible-playbook打包成独立可执行文件。经过调研，尝试了Nuitka、PyInstaller等多种Python打包工具，最终选择Nuitka方案。通过构建Docker镜像进行编译测试，发现GLIBC依赖问题导致兼容性受限。随后尝试静态编译和使用低版本基础镜像降低GLIBC要求，最终采用Debian Jessie作为基础镜像，并解决Python环境适配问题。文章详细记录了技术选型、编译方案调整和具体实现过程，为类似场景下的Python工具二进制化提供了实践参考。</description>
    </item>
  </channel>
</rss>
