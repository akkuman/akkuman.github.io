<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>git on Akkuman 的博客</title>
    <link>//hacktech.cn/categories/git/</link>
    <description>Recent content in git on Akkuman 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 23 May 2019 14:30:00 +0000</lastBuildDate><atom:link href="//hacktech.cn/categories/git/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git彻底删除或变更子模块</title>
      <link>//hacktech.cn/2019/05/23/git-rm-or-change-submodule/</link>
      <pubDate>Thu, 23 May 2019 14:30:00 +0000</pubDate>
      
      <guid>//hacktech.cn/2019/05/23/git-rm-or-change-submodule/</guid>
      <description>&lt;p&gt;今天遇到一个很怪的问题，我想把我的一个子模块切换到另一个上游，我按照网上的方法删除子模块然后新建后，这个子模块依旧跟踪着我先前的上游。自己摸索了一下，可能方法比较傻，不过是可行的，希望能给大家一些帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Travis CI自动部署博客到github pages和coding pages</title>
      <link>//hacktech.cn/2018/09/07/use-travis-ci-update-hexo-to-github-and-coding/</link>
      <pubDate>Fri, 07 Sep 2018 19:25:20 +0000</pubDate>
      
      <guid>//hacktech.cn/2018/09/07/use-travis-ci-update-hexo-to-github-and-coding/</guid>
      <description>&lt;p&gt;每次换系统或换电脑之后重新部署博客总是很苦恼？想像jekyll那样，一次性部署完成后，以后本地不用安装环境直接 &lt;code&gt;git push&lt;/code&gt; 就能生成博客？那我推荐你应该使用使用 &lt;code&gt;Travis CI&lt;/code&gt;了。&lt;/p&gt;
&lt;p&gt;这篇文章我们来讲讲如何利用 &lt;code&gt;Travis CI&lt;/code&gt;把你 &lt;code&gt;push&lt;/code&gt; 上去的博客源文件直接生成可访问的站点，并且同步部署到 &lt;code&gt;github pages&lt;/code&gt; 和 &lt;code&gt;coding pages&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;这篇文章假设你已经对这些采用 &lt;code&gt;git&lt;/code&gt; 版本控制系统的静态博客托管服务有所了解，并且知道怎么去简单的使用 &lt;code&gt;git&lt;/code&gt; 以及了解 &lt;code&gt;hexo&lt;/code&gt; 写博客发布到这些 &lt;code&gt;pages&lt;/code&gt; 服务的流程。因此本文会写的较为&lt;strong&gt;简略，旨在指出关键的地方以及我遇到的问题、问题产生的原因和提供的解决方案&lt;/strong&gt;，希望能够帮助到大家。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一键git push脚本(python版)</title>
      <link>//hacktech.cn/2018/08/22/git-push-python-script/</link>
      <pubDate>Wed, 22 Aug 2018 17:34:24 +0000</pubDate>
      
      <guid>//hacktech.cn/2018/08/22/git-push-python-script/</guid>
      <description>&lt;p&gt;有时候感觉项目push上去每次都敲那么几个命令挺烦人的，可以用这个脚本来代替手工&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git忽略对已入库文件的修改</title>
      <link>//hacktech.cn/2018/08/22/git-update-index/</link>
      <pubDate>Wed, 22 Aug 2018 15:18:42 +0000</pubDate>
      
      <guid>//hacktech.cn/2018/08/22/git-update-index/</guid>
      <description>&lt;p&gt;项目开发过程中，会遇到本地配置文件每个开发人员不同的情况，但如果遇到类似数据库配置这种最终需要加入 git 版本控制的配置，则会陷入两难境地。要么不跟踪，要么有人提交后其他人同步下来必须手动修改，非常麻烦。其实，对于已被纳入版本管理的文件，git 也提供了很好的解决办法。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
