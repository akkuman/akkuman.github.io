# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Akkuman Github Pages

on:
  push:
    branches:
      - hugo
    paths:
      - content/**
      - config.yml
      - layouts/**
      - static/CNAME
      - .github/workflows/**

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v3
      with:
        hugo-version: 'latest'

    - name: Build
      run: hugo --minify --panicOnWarning
    
    - name: Set GITHUB_FILE_CDN
      run: |
        echo "JSDELIVR_CDN=https://cdn.jsdmirror.cn/gh/$GITHUB_REPOSITORY@master" >> $GITHUB_ENV
        echo "GHPROXY_CDN=https://ghp.ci/https://raw.githubusercontent.com/$GITHUB_REPOSITORY/master" >> $GITHUB_ENV

    - name: WithGit
      run: |
        # 拉取主仓库
        git clone https://github.com/$GITHUB_REPOSITORY.git .deploy_git
        # 将先前生成的 html 丢入仓库
        cp -R ./public/* .deploy_git/
        cd .deploy_git
        # 替换所有 html 中的本仓库静态文件链接为 cdn
        # 并且将主题生成的搜索文件 json 替换为 cdn
        # 将所有的 github 图床图片替换为 ghproxy
        find -type f -print0 -name "*.html" | xargs -0 sed -i \
        -e '/<head>/,/<\/head>/ s|href=/assets/|href='$JSDELIVR_CDN'/assets/|g' \
        -e '/<head>/,/<\/head>/ s|href=../index.json|href='$GHPROXY_CDN'/index.json|g' \
        -e '/<p>/,/<\/p>/ s|<img loading=lazy src=https://raw.githubusercontent.com/|<img loading=lazy src=https://ghp.ci/https://raw.githubusercontent.com/|g' \
        -e '/<p>/,/<\/p>/ s|<img loading=lazy src=/images/uploads/|<img loading=lazy src='$GHPROXY_CDN'/images/uploads/|g'
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.ref == 'refs/heads/hugo' }}
      with:
        github_token: ${{ secrets.DEPLOY_PAGES_TOKEN }}
        publish_dir: ./.deploy_git
        publish_branch: master

    - name: SSH Deploy
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p ${SSH_PASSWORD} ssh -o StrictHostKeyChecking=no -p ${SSH_PORT} -l ${SSH_USERNAME} ${SSH_HOST} "bash -c 'cd /var/www/akkuman.github.io && git checkout master && git pull'"
